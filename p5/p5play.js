/** * p5play * @version 3.8 * @author quinton-ashley * @license gpl-v3-only */
p5.prototype.registerMethod("init",(function(){if(void 0===window.planck)throw"planck.js must be loaded before p5play";const pInst=this,log=console.log;this.log=console.log;const pl=planck;this.p5play??={},this.p5play.os??={},this.p5play.context??="web",this.p5play.standardizeKeyboard??=!1,this.p5play.sprites={},this.p5play.groups={},this.p5play.groupsCreated=0,this.p5play.spritesCreated=0,this.angleMode("degrees");const scaleTo=(x,y,tileSize)=>new pl.Vec2(x*tileSize/60,y*tileSize/60),scaleFrom=(x,y,tileSize)=>new pl.Vec2(x/tileSize*60,y/tileSize*60),isSlop=val=>Math.abs(val)<=pl.Settings.linearSlop,fixRound=val=>Math.abs(val-Math.round(val))<=pl.Settings.linearSlop?Math.round(val):val,eventTypes={_collisions:["_collides","_colliding","_collided"],_overlappers:["_overlaps","_overlapping","_overlapped"]};this.Sprite=class{constructor(x,y,w,h,collider){this.p=pInst,this.idNum,this.watch,this.mod=[];let group,ani,args=[...arguments];if(void 0!==args[0]&&args[0]instanceof this.p.Group&&(group=args[0],args=args.slice(1)),args.length||(this._noArgs=!0),void 0!==args[0]&&isNaN(args[0])&&("string"==typeof args[0]||args[0]instanceof this.p.SpriteAnimation||args[0]instanceof p5.Image)&&(ani=args[0],args=args.slice(1)),1==args.length&&"number"==typeof args[0])throw new FriendlyError("Sprite",0,[args[0]]);if(x=args[0],y=args[1],w=args[2],h=args[3],collider=args[4],this._originMode="center",Array.isArray(x)&&(x=void 0,y=void 0,w=args[0],h=args[1],collider=args[2]),Array.isArray(w)||"string"==typeof h){if(isNaN(w)||(w=Number(w)),"number"!=typeof w&&Array.isArray(w[0])&&(this._originMode="start"),void 0!==h){if(Array.isArray(h))throw new FriendlyError("Sprite",1,[`[[${w}], [${h}]]`]);!function(t){let abr=t.slice(0,2);return"d"==t||"s"==t||"k"==t||"n"==t||"dy"==abr||"st"==abr||"ki"==abr||"no"==abr}(h)?w=getRegularPolygon(w,h):collider=h,h=void 0}}else isNaN(w)&&(collider=w,w=void 0);if(this.idNum=this.p.p5play.spritesCreated,this._uid=1e3+this.idNum,this.p.p5play.sprites[this._uid]=this,this.p.p5play.spritesCreated++,this.groups=[],this.p.allSprites.push(this),this.animations=new this.p.SpriteAnimations,this.removed=!1,group){if(group.push(this),!ani)for(let _ani in group.animations){ani=_ani;break}}else group=this.p.allSprites;group.dynamic&&(collider??="dynamic"),group.kinematic&&(collider??="kinematic"),group.static&&(collider??="static"),collider??=group.collider,this._shape=group.shape,this._life=2147483647,this._visible=!0,this._aniChangeCount=0,this._collides={},this._colliding={},this._collided={},this._hasOverlap={},this._overlaps={},this._overlapping={},this._overlapped={},this._collisions={},this._overlappers={},this.tileSize=group.tileSize||1;let _this=this;if(this._position={x:0,y:0},this._pos=pInst.createVector.call(pInst),Object.defineProperty(this._pos,"x",{get(){if(!_this.body)return _this._position.x;let x=_this.body.getPosition().x/_this.tileSize*60;return fixRound(x)},set(val){if(_this.body){let pos=new pl.Vec2(val*_this.tileSize/60,_this.body.getPosition().y);_this.body.setPosition(pos)}_this._position.x=val}}),Object.defineProperty(this._pos,"y",{get(){if(!_this.body)return _this._position.y;let y=_this.body.getPosition().y/_this.tileSize*60;return fixRound(y)},set(val){if(_this.body){let pos=new pl.Vec2(_this.body.getPosition().x,val*_this.tileSize/60);_this.body.setPosition(pos)}_this._position.y=val}}),this._velocity={x:0,y:0},this._vel=pInst.createVector.call(pInst),Object.defineProperties(this._vel,{x:{get(){let val;return val=_this.body?_this.body.getLinearVelocity().x:_this._velocity.x,fixRound(val/_this.tileSize)},set(val){val*=_this.tileSize,_this.body?_this.body.setLinearVelocity(new pl.Vec2(val,_this.body.getLinearVelocity().y)):_this._velocity.x=val}},y:{get(){let val;return val=_this.body?_this.body.getLinearVelocity().y:_this._velocity.y,fixRound(val/_this.tileSize)},set(val){val*=_this.tileSize,_this.body?_this.body.setLinearVelocity(new pl.Vec2(_this.body.getLinearVelocity().x,val)):_this._velocity.y=val}}}),this._mirror={_x:1,_y:1,get x(){return this._x<0},set x(val){_this.watch&&(_this.mod[22]=!0),this._x=val?-1:1},get y(){return this._y<0},set y(val){_this.watch&&(_this.mod[22]=!0),this._y=val?-1:1}},this._heading="right",this._layer=group._layer,this._layer??=this.p.allSprites._getTopLayer()+1,collider??=group.collider,collider&&"string"==typeof collider||(collider="dynamic"),this.collider=collider,x??=group.x,void 0===x&&(x=this.p.width/this.p.allSprites.tileSize/2,this._vertexMode=!0),y??=group.y,void 0===y&&(y=this.p.height/this.p.allSprites.tileSize/2),w??=group.w||group.width||group.d||group.diameter,h??=group.h||group.height,"function"==typeof x&&(x=x(group.length-1)),"function"==typeof y&&(y=y(group.length-1)),this.x=x,this.y=y,ani){ani instanceof p5.Image?this.addAni(ani):"string"==typeof ani?this._changeAni(ani):this._ani=ani.clone();let ts=this.tileSize;w||1==this._ani.w&&1==this._ani.h||(w=this._ani.w/ts,"circle"!=this.shape&&(h=this._ani.h/ts))}if(this.mouse=new this.p._SpriteMouse,"none"!=this.collider)this._vertexMode?this.addCollider(w,h):this.addCollider(0,0,w,h);else{if(this.w=w||(this.tileSize>1?1:50),this.h=h||this.w,Array.isArray(w))throw new Error('Cannot set the collider type of a sprite with a polygon or chain shape to "none". Try having the sprite overlap with other sprites instead.');this._shape=void 0!==w&&void 0===h?"circle":"box"}this._scale=new Scale,Object.defineProperty(this._scale,"x",{get(){return this._x},set(val){if(val==this._x)return;_this.watch&&(_this.mod[28]=!0);let scalarX=val/this._x;_this._w*=scalarX,_this._hw*=scalarX,_this._resizeCollider({x:scalarX,y:1}),this._x=val,this._avg=.5*(this._x+this._y)}}),Object.defineProperty(this._scale,"y",{get(){return this._y},set(val){if(val==this._y)return;_this.watch&&(_this.mod[28]=!0);let scalarY=val/this._y;_this._h&&(this._h*=scalarY,this._hh*=scalarY),_this._resizeCollider({x:1,y:scalarY}),this._y=val,this._avg=.5*(this._x+this._y)}}),this._offset={_x:0,_y:0,get x(){return this._x},set x(val){val!=this._x&&(_this.watch&&(_this.mod[23]=!0),_this._offsetCenterBy(val-this._x,0))},get y(){return this._y},set y(val){val!=this._y&&(_this.watch&&(_this.mod[23]=!0),_this._offsetCenterBy(0,val-this._y))}},this.prevPos={x:x,y:y},this.prevRotation=0,this._dest={x:x,y:y},this._destIdx=0,this.drag=0,this.debug=!1,this._shift={};let gvx=group.vel.x||0,gvy=group.vel.y||0;"function"==typeof gvx&&(gvx=gvx(group.length-1)),"function"==typeof gvy&&(gvy=gvy(group.length-1)),this.vel.x=gvx,this.vel.y=gvy;let skipProps=["ani","collider","vel","x","y"];for(let prop of this.p.Sprite.propsAll){if(skipProps.includes(prop))continue;let val=group[prop];void 0!==val&&("function"==typeof val&&isArrowFunction(val)&&(val=val(group.length-1)),this[prop]="object"==typeof val?Object.assign({},val):val)}skipProps=["add","animation","animations","autoCull","contains","GroupSprite","Group","idNum","length","mod","mouse","p","parent","Sprite","Subgroup","subgroups","velocity"];for(let i=0;i<this.groups.length;i++){let g=this.groups[i],props=Object.keys(g);for(let prop of props){if(!isNaN(prop)||"_"==prop[0]||skipProps.includes(prop)||this.p.Sprite.propsAll.includes(prop))continue;let val=g[prop];void 0!==val&&("function"==typeof val&&isArrowFunction(val)&&(val=val(g.length-1)),this[prop]="object"==typeof val?Object.assign({},val):val)}}this._validateShape(this._shape),this.color??=this.p.color(Math.round(this.p.random(30,245)),Math.round(this.p.random(30,245)),Math.round(this.p.random(30,245))),this.textColor??=this.p.color(0),this.textSize??=1==this.tileSize?this.p.canvas?this.p.textSize():12:.8;let shouldCreateSensor=!1;for(let g of this.groups)if(g._hasSensors){shouldCreateSensor=!0;break}shouldCreateSensor&&!this._hasSensors&&this.addDefaultSensors(),this._massUndefinedByUser=!0,void 0===w&&void 0===h&&(this._dimensionsUndefinedByUser=!0)}addCollider(offsetX,offsetY,w,h){if("none"==this.collider)throw new Error("Cannot add a collider to a sprite that has none.");let props={};props.shape=this._parseShape(...arguments),"chain"==props.shape.m_type&&(props.density=0,props.restitution=0),props.density??=this.density||5,props.friction??=this.friction||.5,props.restitution??=this.bounciness||.2,this.body||(this.body=this.p.world.createBody({position:scaleTo(this.x,this.y,this.tileSize),type:this.collider}),this.body.sprite=this),this.body.createFixture(props)}addSensor(offsetX,offsetY,w,h){let s=this._parseShape(...arguments);this.body||(this.body=this.p.world.createBody({position:scaleTo(this.x,this.y,this.tileSize),type:"dynamic"}),this.body.sprite=this),this.body.createFixture({shape:s,isSensor:!0}),this._hasSensors=!0}_parseShape(offsetX,offsetY,w,h){let path,shape,dimensions,s,args=[...arguments];if(args.length<3&&(offsetX=0,offsetY=0,w=args[0],h=args[1],this._vertexMode=!0),offsetX??=0,offsetY??=0,w??=this._w,!this.body&&this.shape&&"circle"!=this.shape&&(h??=this._h),Array.isArray(w)||"string"==typeof h?(isNaN(w)||(w=Number(w)),"number"!=typeof w&&Array.isArray(w[0])&&(this._originMode="start"),"string"==typeof h?(path=getRegularPolygon(w,h),h=void 0):path=w):(void 0!==w&&void 0===h&&(shape??="circle"),shape??="box"),"box"!=shape&&"circle"!=shape||(w??=this.tileSize>1?1:50,h??=w),"box"!=shape&&"circle"!=shape||(dimensions=scaleTo(w-.08,h-.08,this.tileSize)),"box"==shape)s=pl.Box(dimensions.x/2,dimensions.y/2,scaleTo(offsetX,offsetY,this.tileSize),0);else if("circle"==shape)s=pl.Circle(scaleTo(offsetX,offsetY,this.tileSize),dimensions.x/2);else if(path){let x,y,vecs=[{x:0,y:0}],vert={x:0,y:0},min={x:0,y:0},max={x:0,y:0},usesVertices=Array.isArray(path[0]);function checkVert(){vert.x<min.x&&(min.x=vert.x),vert.y<min.y&&(min.y=vert.y),vert.x>max.x&&(max.x=vert.x),vert.y>max.y&&(max.y=vert.y)}if(usesVertices){this._vertexMode&&(x=path[0][0],y=path[0][1],this.body?(x=this.x-this._relativeOrigin.x,y=this.y-this._relativeOrigin.y,vecs.pop()):(this.x=x,this.y=y));for(let i=0;i<path.length;i++){if(this._vertexMode){if(0==i&&!this.body)continue;vert.x=path[i][0]-x,vert.y=path[i][1]-y}else vert.x+=path[i][0],vert.y+=path[i][1];vecs.push({x:vert.x,y:vert.y}),checkVert()}}else{let rep=1;path.length%2&&(rep=path[path.length-1]);let mod=rep>0?1:-1;rep=Math.abs(rep);let ang=0;for(let i=0;i<rep;i++){for(let j=0;j<path.length-1;j+=2){let len=path[j];ang+=path[j+1],vert.x+=len*this.p.cos(ang),vert.y+=len*this.p.sin(ang),vecs.push({x:vert.x,y:vert.y}),checkVert()}ang*=mod}}isSlop(Math.abs(vecs[0].x)-Math.abs(vecs[vecs.length-1].x))&&isSlop(Math.abs(vecs[0].y)-Math.abs(vecs[vecs.length-1].y))?(shape="polygon",this._originMode="center"):shape="chain",w=max.x-min.x,this._hw=.5*w,h=max.y-min.y,this._hh=.5*h;let isConvex=!1;if("polygon"==shape&&this._isConvexPoly(vecs.slice(0,-1))&&(isConvex=!0),"start"==this._originMode)for(let i=0;i<vecs.length;i++)vecs[i]=scaleTo(vecs[i].x,vecs[i].y,this.tileSize);else{let centerX=0,centerY=0,sumX=0,sumY=0,vl=vecs.length;("polygon"==shape||isConvex)&&vl--;for(let i=0;i<vl;i++)sumX+=vecs[i].x,sumY+=vecs[i].y;centerX=sumX/vl,centerY=sumY/vl,this.body||(this._relativeOrigin={x:centerX,y:centerY}),this._vertexMode&&usesVertices&&(this.body?(centerX=this._relativeOrigin.x,centerY=this._relativeOrigin.y):(this.x+=centerX,this.y+=centerY));for(let i=0;i<vecs.length;i++){let vec=vecs[i];vecs[i]=scaleTo(vec.x+offsetX-centerX,vec.y+offsetY-centerY,this.tileSize)}}(!isConvex||vecs.length-1>pl.Settings.maxPolygonVertices||"chain"==this._shape)&&(shape="chain"),"polygon"==shape?s=pl.Polygon(vecs):"chain"==shape&&(s=pl.Chain(vecs,!1))}return this._shape||(this._shape=shape),this._w=w,this._hw=.5*w,"circle"==this._shape?this._diameter=w:(this._h=h,this._hh=.5*h),s}removeColliders(){this._collides={},this._colliding={},this._collided={},this._removeFixtures(!1)}removeSensors(){this._hasOverlap={},this._overlaps={},this._overlapping={},this._overlapped={},this._removeFixtures(!0)}_removeFixtures(removeSensors){let prevFxt;for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext())if(void 0===removeSensors||fxt.m_isSensor==removeSensors){let _fxt=fxt.m_next;fxt.destroyProxies(this.p.world.m_broadPhase),prevFxt?prevFxt.m_next=_fxt:this.body.m_fixtureList=_fxt}else prevFxt=fxt}_offsetCenterBy(x,y){if(!x&&!y)return;if(this._offset._x+=x,this._offset._y+=y,!this.body)return;let off=scaleTo(x,y,this.tileSize);for(let fxt=this.body.m_fixtureList;fxt;fxt=fxt.m_next){let shape=fxt.m_shape;if("circle"!=shape.m_type){let vertices=shape.m_vertices;for(let v of vertices)v.x+=off.x,v.y+=off.y}else shape.m_p.x+=off.x,shape.m_p.y+=off.y}}_cloneBodyProps(){let body={},props=["bounciness","density","drag","friction","heading","isSuperFast","rotation","rotationDrag","rotationLock","rotationSpeed","scale","vel","x","y"];this._massUndefinedByUser&&this._dimensionsUndefinedByUser||props.push("mass");for(let prop of props)"object"==typeof this[prop]?body[prop]=Object.assign({},this[prop]):body[prop]=this[prop];return body}get animation(){return this._ani}set animation(val){this.changeAni(val)}get ani(){return this._ani}set ani(val){this.changeAni(val)}get anis(){return this.animations}get autoDraw(){return this._autoDraw}set autoDraw(val){this.watch&&(this.mod[6]=!0),this._autoDraw=val}get allowSleeping(){return this.body?.isSleepingAllowed()}set allowSleeping(val){this.watch&&(this.mod[7]=!0),this.body&&this.body.setSleepingAllowed(val)}get autoUpdate(){return this._autoUpdate}set autoUpdate(val){this.watch&&(this.mod[8]=!0),this._autoUpdate=val}get bounciness(){if(this.fixture)return this.fixture.getRestitution()}set bounciness(val){this.watch&&(this.mod[9]=!0);for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext())fxt.setRestitution(val)}get centerOfMass(){let center=this.body.getWorldCenter();return scaleFrom(center.x,center.y,this.tileSize)}get collider(){return this._collider}set collider(val){let c=(val=val.toLowerCase())[0];if("d"==c&&(val="dynamic"),"s"==c&&(val="static"),"k"==c&&(val="kinematic"),"n"==c&&(val="none"),val==this._collider)return;if(this.__collider=["d","s","k","n"].indexOf(c),void 0===this._collider)return void(this._collider=val);if("none"==val&&("chain"==this._shape||"polygon"==this._shape))throw new Error('Cannot set the collider type of a polygon or chain collider to "none". Try having the sprite overlap with other sprites instead.');this.watch&&(this.mod[10]=!0);let oldCollider=this._collider;this._collider=val,void 0!==oldCollider&&this._reset()}_reset(){let v,bodyProps=this._cloneBodyProps();"chain"!=this._shape&&"polygon"!=this._shape||(v=this._getVertices(!0),this._vertexMode=!0),this.body&&(this.p.world.destroyBody(this.body),this.body=void 0),"none"!=this._collider&&(v?this.addCollider(0,0,v):this.addCollider(),this._hasSensors&&this.addDefaultSensors());for(let prop in bodyProps)void 0!==bodyProps[prop]&&(this[prop]=bodyProps[prop]);let ox=this._offset._x,oy=this._offset._y;this._offset._x=0,this._offset._y=0,this._offsetCenterBy(ox,oy)}_parseColor(val){if(val instanceof p5.Color)return val;if("object"!=typeof val)return"string"==typeof val&&1==val.length?this.p.colorPal(val):this.p.color(val);if(val.levels)return this.p.color(...val.levels);if(void 0!==val._r)return this.p.color(val._r,val._g,val._b,255*val._a);if(void 0!==val._h)return this.p.color(val._h,val._s,val._v,255*val._a);throw new Error("Invalid color")}get color(){return this._color}set color(val){this.watch&&(this.mod[11]=!0),this._color=this._parseColor(val)}get colour(){return this._color}set colour(val){this.color=val}get shapeColor(){return this._color}set shapeColor(val){this.color=val}get fill(){return this._color}set fill(val){this.color=val}get fillColor(){return this._color}set fillColor(val){this.color=val}get stroke(){return this._stroke}set stroke(val){this.watch&&(this.mod[31]=!0),this._stroke=this._parseColor(val)}get strokeColor(){return this._stroke}set strokeColor(val){this.stroke=val}get strokeWeight(){return this._strokeWeight}set strokeWeight(val){this.watch&&(this.mod[32]=!0),this._strokeWeight=val}get textColor(){return this._textColor}set textColor(val){this.watch&&(this.mod[34]=!0),this._textColor=this._parseColor(val)}get debug(){return this._debug}set debug(val){this.watch&&(this.mod[12]=!0),this._debug=val}get density(){if(this.fixture)return this.fixture.getDensity()}set density(val){this.watch&&(this.mod[13]=!0);for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext())fxt.setDensity(val)}get depth(){return this._layer}set depth(val){this.layer=val}_getDirectionAngle(name){name=name.toLowerCase().replaceAll(/[ _-]/g,"");let val={up:-90,down:90,left:180,right:0,upright:-45,rightup:-45,upleft:-135,leftup:-135,downright:45,rightdown:45,downleft:135,leftdown:135,forward:this.rotation,backward:this.rotation+180}[name];return"radians"==this.p._angleMode&&(val=this.p.radians(val)),val}get direction(){return 0!==this.vel.x||0!==this.vel.y?this.p.atan2(this.vel.y,this.vel.x):void 0===this._direction?this.rotation:this._direction}set direction(val){this.watch&&(this.mod[14]=!0),"string"==typeof val&&(this._heading=val,val=this._getDirectionAngle(val)),this._direction=val;let speed=this.speed;this.vel.x=this.p.cos(val)*speed,this.vel.y=this.p.sin(val)*speed}get drag(){return this.body?.getLinearDamping()}set drag(val){this.watch&&(this.mod[15]=!0),this.body&&this.body.setLinearDamping(val)}get draw(){return this._display}set draw(val){this._draw=val}get dynamic(){return this.body?.isDynamic()}set dynamic(val){this.collider=val?"dynamic":"kinematic"}get fixture(){return this.fixtureList}get fixtureList(){return this.body?this.body.m_fixtureList:null}get friction(){if(this.fixture)return this.fixture.getFriction()}set friction(val){this.watch&&(this.mod[16]=!0);for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext())fxt.setFriction(val)}get heading(){return this._heading}set heading(val){this.direction=val}get immovable(){return this.body.isStatic()}set immovable(val){val&&this.body.setStatic()}get img(){return this._ani?.frameImage}set img(val){this.changeAni(val)}get image(){return this._ani?.frameImage}set image(val){this.changeAni(val)}get isMoving(){return 0!=this.vel.x||0!=this.vel.y}get isSuperFast(){return this.body?.isBullet()}set isSuperFast(val){this.watch&&(this.mod[18]=!0),this.body&&this.body.setBullet(val)}get kinematic(){return this.body?.isKinematic()}set kinematic(val){this.collider=val?"kinematic":"dynamic"}get layer(){return this._layer}set layer(val){this.watch&&(this.mod[19]=!0),this._layer=val}get life(){return this._life}set life(val){this.watch&&(this.mod[20]=!0),this._life=val}get mass(){return this.body?.getMass()}set mass(val){if(!this.body)return;this.watch&&(this.mod[21]=!0);let t=this.massData;t.mass=val,this.body.setMassData(t),delete this._massUndefinedByUser}get massData(){const t={I:0,center:new pl.Vec2(0,0),mass:0};return this.body.getMassData(t),t.center=scaleFrom(t.center.x,t.center.y,this.tileSize),t}get mirror(){return this._mirror}set mirror(val){this.watch&&(this.mod[22]=!0),void 0!==val.x&&(this._mirror.x=val.x),void 0!==val.y&&(this._mirror.y=val.y)}get offset(){return this._offset}set offset(val){val.x??=this._offset._x,val.y??=this._offset._y,val.x==this._offset._x&&val.y==this._offset._y||(this.watch&&(this.mod[23]=!0),this._offsetCenterBy(val.x-this._offset._x,val.y-this._offset._y))}get previousPosition(){return this.prevPos}set previousPosition(val){this.prevPos=val}get previousRotation(){return this.prevRotation}set previousRotation(val){this.prevRotation=val}get pixelPerfect(){return this._pixelPerfect}set pixelPerfect(val){this.watch&&(this.mod[24]=!0),this._pixelPerfect=val}get rotation(){if(!this.body)return this._angle||0;let val=this.body.getAngle();return"degrees"===this.p._angleMode?this.p.degrees(val):val}set rotation(val){this.body?("degrees"===this.p._angleMode&&(val=this.p.radians(val)),this.body.setAngle(val)):this._angle=val}get rotationDrag(){return this.body?.getAngularDamping()}set rotationDrag(val){this.body&&(this.watch&&(this.mod[26]=!0),this.body.setAngularDamping(val))}get rotationLock(){return this.body?.isFixedRotation()}set rotationLock(val){this.body&&(this.watch&&(this.mod[27]=!0),this.body.setFixedRotation(val))}get rotationSpeed(){return this.body?this.body.getAngularVelocity():this._rotationSpeed||0}set rotationSpeed(val){this.body?this.body.setAngularVelocity(val):this._rotationSpeed=val}get scale(){return this._scale}set scale(val){if(val<=0&&(val=.01),"number"==typeof val?val={x:val,y:val}:(val.x??=this._scale._x,val.y??=this._scale._y),val.x==this._scale._x&&val.y==this._scale._y)return;this.watch&&(this.mod[28]=!0);let scalars={x:val.x/this._scale._x,y:val.y/this._scale._y};this._w*=scalars.x,this._hw*=scalars.x,this._h&&(this._h*=scalars.y,this._hh*=scalars.y),this._resizeCollider(scalars),this._scale._x=val.x,this._scale._y=val.y,this._scale._avg=val.x}get sleeping(){if(this.body)return!this.body.isAwake()}set sleeping(val){this.body&&(this.watch&&(this.mod[30]=!0),this.body.setAwake(!val))}get speed(){return this.p.createVector(this.vel.x,this.vel.y).mag()}set speed(val){let angle=this.direction;this.vel.x=this.p.cos(angle)*val,this.vel.y=this.p.sin(angle)*val}get static(){return this.body?.isStatic()}set static(val){this.collider=val?"static":"dynamic"}get vertices(){return this._getVertices()}_getVertices(output2DArrays){let f=this.fixture;for(;f.m_next;)f=f.m_next;let s=f.getShape(),v=[...s.m_vertices];"polygon"==s.m_type&&v.unshift(v.at(-1));let x=this.x,y=this.y;for(let i=0;i<v.length;i++){let arr=[fixRound(v[i].x/this.tileSize*60+x),fixRound(v[i].y/this.tileSize*60+y)];v[i]=output2DArrays?arr:pInst.createVector(arr[0],arr[1])}return v}get visible(){return this._visible}set visible(val){this.watch&&(this.mod[37]=!0),this._visible=val}get x(){return this._pos.x}set x(val){this._pos.x=val}get y(){return this._pos.y}set y(val){this._pos.y=val}get pos(){return this._pos}set pos(val){if(this.body){let pos=new pl.Vec2(val.x*this.tileSize/60,val.y*this.tileSize/60);this.body.setPosition(pos)}this._position.x=val.x,this._position.y=val.y}get position(){return this._pos}set position(val){this.pos=val}get w(){return this._w}set w(val){if(val<0&&(val=.01),val==this._w)return;this.watch&&(this.mod[38]=!0),delete this._dimensionsUndefinedByUser;let scalarX=val/this._w;this._w=val,this._hw=.5*val,this._resizeCollider({x:scalarX,y:1})}get hw(){return this._hw}set hw(val){throw new FriendlyError("Sprite.hw")}get width(){return this._w}set width(val){this.w=val}get halfWidth(){return this.hw}set halfWidth(val){throw new FriendlyError("Sprite.hw")}get h(){return"circle"==this.shape?this._w:this._h}set h(val){if(val<0&&(val=.01),"circle"==this.shape)return void(this.w=val);if(val==this._h)return;this.watch&&(this.mod[17]=!0),delete this._dimensionsUndefinedByUser;let scalarY=val/this._h;this._h=val,this._hh=.5*val,this._resizeCollider({x:1,y:scalarY})}get hh(){return this._hh||this._hw}set hh(val){throw new FriendlyError("Sprite.hh")}get height(){return this.h}set height(val){this.h=val}get halfHeight(){return this.hh}set halfHeight(val){throw new FriendlyError("Sprite.hh")}get d(){return this._diameter??=this.w,this._diameter}set d(val){if(val<0)return void this.remove();let shapeChange="circle"!=this.shape;if(shapeChange){let bodyProps;if(this.watch&&(this.mod[29]=!0,this.mod[38]=!0),"none"!=this._collider&&(bodyProps=this._cloneBodyProps()),this._removeFixtures(),this._h=void 0,this._shape=void 0,"none"!=this._collider){this.addCollider(0,0,val);for(let prop in bodyProps)void 0!==bodyProps[prop]&&(this[prop]=bodyProps[prop])}this._shape="circle"}else{if(this._diameter==val)return;this.watch&&(this.mod[38]=!0),this._diameter=val}let scalar=val/this._w;this._w=val,this._hw=.5*val,this._h=val,this._hh=this._hw,shapeChange||this._resizeCollider({x:scalar,y:scalar})}get diameter(){return this.d}set diameter(val){this.d=val}get r(){return this._hw}set r(val){this.d=2*val}get radius(){return this._hw}set radius(val){this.d=2*val}_resizeCollider(scalars){if(this.body){if("circle"==this.shape){this.fixture.m_shape.m_radius*=scalars.x}else for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext()){if(fxt.m_isSensor)continue;let sh=fxt.m_shape;for(let vert of sh.m_vertices)vert.x*=scalars.x,vert.y*=scalars.y}"static"==this.collider&&this.body.synchronizeFixtures()}}_isConvexPoly(vecs){loopk:for(let k=0;k<2;k++){1==k&&(vecs=vecs.reverse());for(let i=0;i<vecs.length;++i){const i1=i,i2=i<vecs.length-1?i1+1:0,p=vecs[i1],e=pl.Vec2.sub(vecs[i2],p);for(let j=0;j<vecs.length;++j){if(j==i1||j==i2)continue;const v=pl.Vec2.sub(vecs[j],p);if(pl.Vec2.cross(e,v)<0){if(0==k)continue loopk;return!1}}}break}return!0}get shape(){return this._shape}set shape(val){val!=this._shape&&(this._validateShape(val),this.watch&&(this.mod[29]=!0),"circle"==val?this.d=this.w:(this._shape=val,this._reset()))}_validateShape(val){let __shape=this.p.Sprite.shapeTypes.indexOf(val);if(-1==__shape)throw new Error('Invalid shape type: "'+val+'"\nThe valid shape types are: "'+this.p.Sprite.shapeTypes.join('", "')+'"');this.__shape=__shape}get update(){return this._update}set update(val){this._customUpdate=val}get vel(){return this._vel}set vel(val){this.vel.x=val.x,this.vel.y=val.y}set velocity(val){this.vel=val}get velocity(){return this._vel}_update(){this._ani&&this._ani.update();for(let prop in this.mouse)-1==this.mouse[prop]&&(this.mouse[prop]=0);this._customUpdate&&this._customUpdate(),this.autoUpdate&&(this.autoUpdate=null)}_step(){if(this.body||this.removed||(this.rotation+=this._rotationSpeed,this.x+=this.vel.x,this.y+=this.vel.y),this.watch&&(this.x!=this.prevX&&(this.mod[0]=this.mod[2]=!0),this.y!=this.prevY&&(this.mod[1]=this.mod[2]=!0),this.rotation!=this.prevRotation&&(this.mod[3]=this.mod[4]=!0)),!this.body&&!this.removed)return;let a=this;for(let event in eventTypes)for(let k in this[event]){let contactType,b;b=k>=1e3?this.p.p5play.sprites[k]:this.p.p5play.groups[k];let v=a[event][k]+1;if(this[event][k]=v,b instanceof this.p.Group&&(b[event][a._uid]=v),!b||0==v){delete a[event][k],b instanceof this.p.Group&&delete b[event][a._uid];continue}if(contactType=-1==v?eventTypes[event][2]:1==v?eventTypes[event][0]:eventTypes[event][1],b instanceof this.p.Group)continue;let cb=this.p.world._findContactCB(contactType,a,b);"function"==typeof cb&&cb(a,b,v)}this.removed&&0==Object.keys(this._collisions).length&&0==Object.keys(this._overlappers).length&&delete this.p.p5play.sprites[this._uid]}_draw(){if(void 0!==this.strokeWeight&&this.p.strokeWeight(this.strokeWeight),this._ani&&"colliders"!=this.debug&&this._ani.draw(this._offset._x,this._offset._y,0,this._scale._x,this._scale._y),!this._ani||this.debug)if(this.debug&&"colliders"!=this.debug&&(this.p.noFill(),this.p.stroke(0,255,0),this.p.line(0,-2,0,2),this.p.line(-2,0,2,0)),null!=this.fixture){"chain"==this._shape?this.p.stroke(this.stroke||this.color):this._stroke&&this.p.stroke(this._stroke);for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext())this._drawFixture(fxt)}else this.p.stroke(this._stroke||120),"box"==this._shape?this.p.rect(this._offset._x,this._offset._y,this.w*this.tileSize,this.h*this.tileSize):"circle"==this._shape&&this.p.circle(this._offset._x,this._offset._y,this.d*this.tileSize);void 0!==this.text&&(this.p.textAlign(this.p.CENTER,this.p.CENTER),this.p.fill(this.textColor),this.p.textSize(this.textSize*this.tileSize),this.p.text(this.text,0,0))}_display(){let x=.5*this.p.width-this.p.world.origin.x+this.x*this.tileSize,y=.5*this.p.height-this.p.world.origin.y+this.y*this.tileSize;"chain"!=this.shape&&this.p.camera.active&&(x+this.w<this.p.camera.bound.min.x||x-this.w>this.p.camera.bound.max.x||y+this.h<this.p.camera.bound.min.y||y-this.h>this.p.camera.bound.max.y)||(x=fixRound(x),y=fixRound(y),this._pixelPerfect&&(this._w%2!=0&&isSlop(x%1-.5)||(x=Math.round(x)),this._h%2!=0&&isSlop(y%1-.5)||(y=Math.round(y))),this.p.push(),this.p.imageMode("center"),this.p.rectMode("center"),this.p.ellipseMode("center"),this.p.translate(x,y),this.rotation&&this.p.rotate(this.rotation),this.p.scale(this._mirror._x,this._mirror._y),this.p.fill(this.color),this._draw(),this.p.pop(),this._cameraActiveWhenDrawn=this.p.camera.active,this.autoDraw&&(this.autoDraw=null))}_drawFixture(fxt){const sh=fxt.m_shape;if("polygon"==sh.m_type||"chain"==sh.m_type){"chain"==sh.m_type&&(this.p.push(),this.p.noFill());let v=sh.m_vertices;this.p.beginShape();for(let i=0;i<v.length;i++)this.p.vertex(60*v[i].x,60*v[i].y);"chain"!=sh.m_type?this.p.endShape("close"):(this.p.endShape(),this.p.pop())}else if("circle"==sh.m_type){const d=2*sh.m_radius*60;this.p.ellipse(60*sh.m_p.x,60*sh.m_p.y,d,d)}else"edge"==sh.m_type&&this.p.line(60*sh.m_vertex1.x,60*sh.m_vertex1.y,60*sh.m_vertex2.x,60*sh.m_vertex2.y)}_args2Vec(x,y){return Array.isArray(x)?{x:x[0],y:x[1]}:("object"==typeof x&&(y=x.y,x=x.x),{x:x||0,y:y||0})}applyForce(x,y,originX,originY){if(!this.body||!x&&!y)return;2==arguments.length&&"number"!=typeof y&&(originX=y);let forceVector=new pl.Vec2(this._args2Vec(x,y));if(forceVector=forceVector.mul(this.body.m_mass),originX||originY){let o=this._args2Vec(originX,originY),forceOrigin=scaleTo(o.x,o.y,this.tileSize);this.body.applyForce(forceVector,forceOrigin,!1)}else this.body.applyForceToCenter(forceVector,!1)}applyImpulse(x,y,originX,originY){if(!this.body)return;2==arguments.length&&"number"!=typeof y&&(originX=y);let impulseOrigin,impulseVector=new pl.Vec2(this._args2Vec(x,y));if(void 0===originX)impulseOrigin=this.body.getPosition();else{let o=this._args2Vec(originX,originY);impulseOrigin=scaleTo(o.x,o.y,this.tileSize)}this.body.applyLinearImpulse(impulseVector,impulseOrigin,!0)}applyTorque(val){this.body.applyTorque(val,!0)}setVelocity(x,y){"object"==typeof x&&(y=x.y,x=x.x),this.vel.x=x,this.vel.y=y}setSpeed(speed,direction){direction&&(this.direction=direction),this.speed=speed}addSpeed(speed,angle){angle??=this.direction,this.vel.x+=this.p.cos(angle)*speed,this.vel.y+=this.p.sin(angle)*speed}moveTowards(x,y,tracking){if(null!=x){if("number"!=typeof x){let obj=x;if(obj==this.p.mouse&&!this.p.mouse.active)return;if(void 0===obj.x||void 0===obj.y)return;tracking=y,y=obj.y,x=obj.x}if(void 0!==x||void 0!==y){if(tracking??=.1,null!=x){let diffX=x-this.x;isSlop(diffX)?this.vel.x=0:this.vel.x=diffX*tracking*this.tileSize}if(null!=y){let diffY=y-this.y;isSlop(diffY)?this.vel.y=0:this.vel.y=diffY*tracking*this.tileSize}}}}moveAway(x,y,repel){this.moveTowards(...arguments),this.vel.x*=-1,this.vel.y*=-1}move(distance,direction,speed){let dirNameMode=isNaN(arguments[0]);dirNameMode?(direction=arguments[0],speed=arguments[1],distance=arguments[2]):dirNameMode=isNaN(direction),distance??=1,"string"==typeof direction&&(this._heading=direction,direction=this._getDirectionAngle(direction)),direction??=this.direction;let x=this.x+this.p.cos(direction)*distance,y=this.y+this.p.sin(direction)*distance;return dirNameMode&&this.tileSize>1?(x=Math.round(x),y=Math.round(y)):direction%90==0&&(x=fixRound(x),y=fixRound(y)),this.moveTo(x,y,speed)}moveTo(x,y,speed){if(null==x)return;if("number"!=typeof x){let obj=x;if(obj==this.p.mouse&&!this.p.mouse.active)return;if(void 0===obj.x||void 0===obj.y)return;speed=y,y=obj.y,x=obj.x}if(this._dest.x=this.x,this._dest.y=this.y,x==this.x?x=!1:(this._dest.x=x,x=!0),y==this.y?y=!1:(this._dest.y=y,y=!0),this._destIdx++,!x&&!y)return Promise.resolve(!0);if(this.speed&&(speed??=this.speed),this.tileSize>1&&(speed??=.1),speed??=1,speed<=0)return Promise.resolve(!1);let a=this._dest.y-this.y,b=this._dest.x-this.x,percent=speed/Math.sqrt(a*a+b*b);this.vel.x=b*percent,this.vel.y=a*percent;let destD=this.direction,destDMin=destD-.1,destDMax=destD+.1,margin=speed+.01,destIdx=this._destIdx,velThresh=Math.max(this.p.world.velocityThreshold,.25*margin)/this.tileSize;return(async()=>{let distX=margin+margin,distY=margin+margin;do{if(destIdx!=this._destIdx)return!1;await pInst.delay();let dir=this.direction;if(dir<=destDMin||dir>=destDMax||Math.abs(this.vel.x)<=velThresh&&Math.abs(this.vel.y)<=velThresh)return!1;distX=Math.abs(this.x-this._dest.x),distY=Math.abs(this.y-this._dest.y)}while(x&&distX>margin||y&&distY>margin);return distX<margin&&(this.x=this._dest.x),distY<margin&&(this.y=this._dest.y),this.vel.x=0,this.vel.y=0,!0})()}rotateTowards(angle,tracking){if(1==this.__collider)throw new FriendlyError(0);let x,y,facing,args=arguments;"number"!=typeof args[0]?(x=args[0].x,y=args[0].y,tracking=args[1],facing=args[2]):arguments.length>2&&(x=args[0],y=args[1],tracking=args[2],facing=args[3]),void 0!==x?angle=this.angleToFace(x,y,facing):angle-=this.rotation,tracking??=.1,this.rotationSpeed=angle*tracking}angleTo(x,y){if("object"==typeof x){let obj=x;if(obj==this.p.mouse&&!this.p.mouse.active)return 0;if(void 0===obj.x||void 0===obj.y)return 0;y=obj.y,x=obj.x}return this.p.atan2(y-this.y,x-this.x)}angleToFace(x,y,facing){if("object"==typeof x&&(facing=y,y=x.y,x=x.x),Math.abs(x-this.x)<.01&&Math.abs(y-this.y)<.01)return 0;let ang=this.angleTo(x,y);facing??=0,ang+=facing;let dist1=ang-this.rotation%360,dist2=360-Math.abs(dist1);return dist2*=dist1<0?1:-1,Math.abs(dist1)<Math.abs(dist2)?dist1:dist2}rotateTo(angle,speed){if(1==this.__collider)throw new FriendlyError(0);let x,y,facing,args=arguments;if("number"!=typeof args[0]?(x=args[0].x,y=args[0].y,speed=args[1],facing=args[2]):arguments.length>2&&(x=args[0],y=args[1],speed=args[2],facing=args[3]),void 0!==x)angle=this.angleToFace(x,y,facing);else{if(angle==this.rotation)return;angle-=this.rotation}return this.rotate(angle,speed)}rotate(angle,speed){if(1==this.__collider)throw new FriendlyError(0);if(isNaN(angle))throw new FriendlyError(1,[angle]);if(0==angle)return;let absA=Math.abs(angle);speed??=1,speed>absA&&(speed=absA);let ang=this.rotation+angle,cw=angle>0;this.rotationSpeed=speed*(cw?1:-1);let frames=Math.floor(absA/speed)-1;this._rotateIdx??=0,this._rotateIdx++;let _rotateIdx=this._rotateIdx;return(async()=>{if(frames>1){let limit=Math.abs(this.rotationSpeed)+.01;do{if(this._rotateIdx!=_rotateIdx)return!1;if(await pInst.delay(),cw&&this.rotationSpeed<.01||!cw&&this.rotationSpeed>-.01)return!1}while((cw&&ang>this.rotation||!cw&&ang<this.rotation)&&limit<Math.abs(ang-this.rotation));Math.abs(ang-this.rotation)>.01&&(this.rotationSpeed=ang-this.rotation,await pInst.delay())}else await pInst.delay();return this._rotateIdx==_rotateIdx&&(this.rotationSpeed=0,this.rotation=ang,!0)})()}async changeAni(anis){if(this.p.p5play.disableImages)return;if(arguments.length>1)anis=[...arguments];else if(anis instanceof this.p.SpriteAnimation){if(anis==this._ani)return;anis=[anis]}else if(!Array.isArray(anis)){if(anis==this._ani?.name)return;anis=[anis]}let loop,stopOnLastAni;this._aniChangeCount++;for(let i=0;i<anis.length;i++){let ani=anis[i];(ani instanceof this.p.SpriteAnimation||ani instanceof p5.Image||"string"==typeof ani&&1!=ani.length&&ani.includes("."))&&(ani=this.addAni(ani),anis[i]=ani),"string"==typeof ani&&(ani={name:ani},anis[i]=ani),ani.name.length>1&&("!"==ani.name[0]&&(ani.name=ani.name.slice(1),ani.start=-1,ani.end=0),"<"!=ani.name[0]&&">"!=ani.name[0]||(ani.name=ani.name.slice(1),ani.flipX=!0),"^"==ani.name[0]&&(ani.name=ani.name.slice(1),ani.flipY=!0),"**"==ani.name&&(loop=!0,anis=anis.slice(0,-1)),";;"==ani.name&&(stopOnLastAni=!0,anis=anis.slice(0,-1)))}let count=this._aniChangeCount;do{for(let i=0;i<anis.length;i++){let ani=anis[i];!ani.start&&anis.length>1&&(ani.start=0),await this._playSequencedAni(ani)}}while(loop&&count==this._aniChangeCount);1!=anis.length&&stopOnLastAni&&this._ani.stop()}_playSequencedAni(ani){return new Promise((resolve=>{let{name:name,start:start,end:end,flipX:flipX,flipY:flipY}=ani;this._changeAni(name),flipX&&(this._ani.scale.x=-this._ani.scale.x),flipY&&(this._ani.scale.y=-this._ani.scale.y),start<0&&(start=this._ani.length+start),void 0!==start&&(this._ani.frame=start),void 0!==end?this._ani.goToFrame(end):this._ani.frame==this._ani.lastFrame&&resolve(),this._ani._onComplete=this._ani._onChange=()=>{flipX&&(this._ani.scale.x=-this._ani.scale.x),flipY&&(this._ani.scale.y=-this._ani.scale.y),this._ani._onComplete=this._ani._onChange=null,resolve()}}))}changeAnimation(){return this.changeAni(...arguments)}_changeAni(label){this._ani?._onChange&&this._ani._onChange(),this._ani?.onChange&&this._ani.onChange();let ani=this.animations[label];if(!ani)for(let i=this.groups.length-1;i>=0;i--){if(ani=this.groups[i].animations[label],ani){ani=ani.clone();break}}if(!ani)throw this.p.noLoop(),new FriendlyError("Sprite.changeAnimation",[label]);this._ani=ani,this._ani.name=label,this.resetAnimationsOnChange&&(this._ani.frame=0)}remove(){this.removed=!0}_remove(){this.body&&this.p.world.destroyBody(this.body),this.body=null;for(let g of this.groups)g.remove(this);0==Object.keys(this._collisions).length&&0==Object.keys(this._overlappers).length&&delete this.p.p5play.sprites[this._uid]}get removed(){return this._removed}set removed(val){val&&!this._removed&&(this.watch&&(this.mod[25]=!0),this._removed=!0,this._remove())}toString(){return"s"+this.idNum}_ensureCollide(target,callback){if(!target)throw new FriendlyError("Sprite.collide",2);if(!(target instanceof this.p.Sprite||target instanceof this.p.Group))throw new FriendlyError("Sprite.collide",0,[target]);if(callback&&"function"!=typeof callback)throw new FriendlyError("Sprite.collide",1,[callback]);if(!1!==this._hasOverlap[target._uid]&&(this._hasOverlap[target._uid]=!1),!1!==target._hasOverlap[this._uid]&&(target._hasOverlap[this._uid]=!1,target instanceof this.p.Group))for(let s of target)s._hasOverlap[this._uid]=!1}collide(target,callback){return this.collides(target,callback)}collides(target,callback){return this._ensureCollide(target,callback),this._collides[target._uid]=callback||!0,1==this._collisions[target._uid]}colliding(target,callback){this._ensureCollide(target,callback),this._colliding[target._uid]=callback||!0;let val=this._collisions[target._uid];return val>0?val:0}collided(target,callback){return this._ensureCollide(target,callback),this._collided[target._uid]=callback||!0,-1==this._collisions[target._uid]}_removeContactsWith(target){if(target instanceof this.p.Group)for(let s of target)this._removeContactsWith(s);else this.__removeContactsWith(target)}__removeContactsWith(o){if(this.body)for(let ce=this.body.getContactList();ce;ce=ce.next){let c=ce.contact;c.m_fixtureA.m_body.sprite._uid!=o._uid&&c.m_fixtureB.m_body.sprite._uid!=o._uid||this.p.world.destroyContact(c)}}_ensureOverlap(target,callback){if(!target)throw new FriendlyError("Sprite.overlap",2);if(!(target instanceof this.p.Sprite||target instanceof this.p.Group))throw new FriendlyError("Sprite.overlap",0,[target]);if(callback&&"function"!=typeof callback)throw new FriendlyError("Sprite.overlap",1,[callback]);if(this._hasSensors||this.addDefaultSensors(),!target._hasSensors)if(target instanceof this.p.Sprite)target.addDefaultSensors();else{for(let s of target)s._hasSensors||s.addDefaultSensors();target._hasSensors=!0}if(1!=this._hasOverlap[target._uid]&&(this._removeContactsWith(target),this._hasOverlap[target._uid]=!0),1!=target._hasOverlap[this._uid]&&(target._removeContactsWith(this),target._hasOverlap[this._uid]=!0,target instanceof this.p.Group))for(let s of target)s._hasOverlap[this._uid]=!0}overlap(target,callback){return this.overlaps(target,callback)}overlaps(target,callback){return this._ensureOverlap(target,callback),this._overlaps[target._uid]=callback||!0,1==this._overlappers[target._uid]}overlapping(target,callback){this._ensureOverlap(target,callback),this._overlapping[target._uid]=callback||!0;let val=this._overlappers[target._uid];return val>0?val:0}overlapped(target,callback){return this._ensureOverlap(target,callback),this._overlapped[target._uid]=callback||!0,-1==this._overlappers[target._uid]}addDefaultSensors(){let shape;if(this.body)for(let fxt=this.fixtureList;fxt;fxt=fxt.getNext())fxt.m_isSensor||(shape=fxt.m_shape,this.body.createFixture({shape:shape,isSensor:!0}));else this.addSensor();this._hasSensors=!0}},this.Sprite.propTypes={x:"Float64",y:"Float64",vel:"Vec2",rotation:"number",rotationSpeed:"number",ani:"string",autoDraw:"boolean",allowSleeping:"boolean",autoUpdate:"boolean",bounciness:"number",collider:"Uint8",color:"color",debug:"boolean",density:"number",direction:"number",drag:"number",friction:"number",h:"number",isSuperFast:"boolean",layer:"number",life:"Int32",mass:"number",mirror:"Vec2_boolean",offset:"Vec2",pixelPerfect:"boolean",removed:"boolean",rotationDrag:"number",rotationLock:"boolean",scale:"Vec2",shape:"Uint8",sleeping:"boolean",stroke:"color",strokeWeight:"number",text:"string",textColor:"color",tile:"string",tileSize:"number",visible:"boolean",w:"number"},this.Sprite.props=Object.keys(this.Sprite.propTypes),this.Sprite.propsAll=this.Sprite.props.concat(["d","diameter","dynamic","fill","height","heading","kinematic","resetAnimationsOnChange","speed","static","width"]),this.Sprite.colliderTypes=["d","s","k","n"],this.Sprite.shapeTypes=["box","circle","chain","polygon"],this.Turtle=function(size){if(pInst.allSprites.tileSize>1)throw new Error("Turtle can't be used when allSprites.tileSize is greater than 1.");size??=25;let t=new pInst.Sprite(size,size,[[size,.4*size],[-size,.4*size],[0,.8*-size]]);t.color="green",t._isTurtleSprite=!0,t._prevPos={x:t.x,y:t.y};let _move=t.move;return t.move=async function(){this._prevPos.x=this.x,this._prevPos.y=this.y,await _move.call(this,...arguments)},t},this.SpriteAnimation=class extends Array{constructor(){super(),this.p=pInst;let owner,args=[...arguments];if(this.name="default",(args[0]instanceof this.p.Sprite||args[0]instanceof this.p.Group)&&(owner=args[0],args=args.slice(1)),owner??=this.p.allSprites,"string"!=typeof args[0]||1!=args[0].length&&args[0].includes(".")||(this.name=args[0],args=args.slice(1)),this.frame=0,this._cycles=0,this.targetFrame=-1,this.offset={x:owner.anis.offset.x||0,y:owner.anis.offset.y||0},this._frameDelay=owner.anis.frameDelay||4,this.demoMode=owner.anis.demoMode||!1,this.playing=!0,this.visible=!0,this.looping=owner.anis.looping,this.looping??=!0,this.endOnFirstFrame=!1,this.frameChanged=!1,this.onComplete=this.onChange=null,this._onComplete=this._onChange=null,this.rotation=owner.anis.rotation||0,this._scale=new Scale,0!=args.length&&"number"!=typeof args[0])if(owner.addAni(this),Array.isArray(args[0])&&"string"==typeof args[0][0]&&(args=[...args[0]]),2!=args.length||"string"!=typeof args[0]||"string"!=typeof args[1]&&"number"!=typeof args[1])if("string"==typeof args[args.length-1]||args[args.length-1]instanceof p5.Image)for(let i=0;i<args.length;i++)args[i]instanceof p5.Image?this.push(args[i]):this.push(this.p.loadImage(args[i]));else{let atlas,sheet=owner.spriteSheet;if(args[0]instanceof p5.Image||"string"==typeof args[0]){if(args.length>=3)throw new FriendlyError("SpriteAnimation",1);sheet=args[0],atlas=args[1]}else atlas=args[0];let _this=this;if(sheet instanceof p5.Image&&1!=sheet.width&&1!=sheet.height)this.spriteSheet=sheet,_generateSheetFrames();else{let url;url="string"==typeof sheet?sheet:sheet.url,this.spriteSheet=this.p.loadImage(url,(()=>{_generateSheetFrames()}))}function _generateSheetFrames(){if(Array.isArray(atlas)||Array.isArray(atlas.frames)){if("number"!=typeof atlas[0]){let frames=atlas;if(Array.isArray(atlas.frames)){frames=atlas.frames,delete atlas.frames;for(let i=0;i<frames.length;i++)frames[i]={pos:frames[i]},Object.assign(frames[i],atlas)}for(let frame of frames)atlas=frame,_generateSheetFrames();return}atlas=4==atlas.length?{pos:atlas.slice(0,2),size:atlas.slice(2)}:{pos:atlas}}let{w:w,h:h,width:width,height:height,size:size,row:row,col:col,line:line,x:x,y:y,pos:pos,frames:frames,frameCount:frameCount,frameDelay:frameDelay,frameSize:frameSize,delay:delay,rotation:rotation}=atlas;frameSize??=size||owner.anis.frameSize,delay&&(_this.frameDelay=delay),frameDelay&&(_this.frameDelay=frameDelay),rotation&&(_this.rotation=rotation),frameCount??=frames||1,w??=width||owner.anis.w,h??=height||owner.anis.h,x??=col||0,y??=line||row||0,pos&&(x=pos[0],y=pos[1]),"number"==typeof frameSize?w=h=frameSize:frameSize&&(w=frameSize[0],h=frameSize[1]);let tileSize=owner.tileSize;w&&h?(w*=tileSize,h*=tileSize):!owner._dimensionsUndefinedByUser&&owner.w&&owner.h?(w=owner.w,h=owner.h):tileSize?w=h=tileSize:frameCount?(w=_this.spriteSheet.width/frameCount,h=_this.spriteSheet.height):w=h=_this.spriteSheet.width<_this.spriteSheet.height?_this.spriteSheet.width:_this.spriteSheet.height,1!=tileSize?(x*=tileSize,y*=tileSize):void 0===line&&void 0===row&&void 0===col||(x*=w,y*=h);for(let i=0;i<frameCount;i++)_this.push({x:x,y:y,w:w,h:h}),x+=w,x>=_this.spriteSheet.width&&(x=0,y+=h,y>=_this.spriteSheet.height&&(y=0))}}else{let to,num2,from=args[0];if(isNaN(args[1])?to=args[1]:num2=Number(args[1]),".png"!=from.slice(-4)||to&&".png"!=to.slice(-4))throw new FriendlyError("SpriteAnimation",0,[from]);let digits1=0,digits2=0;for(let i=from.length-5;i>=0&&!isNaN(from.charAt(i));i--)digits1++;if(to)for(let i=to.length-5;i>=0&&!isNaN(to.charAt(i));i--)digits2++;let prefix2,prefix1=from.slice(0,-4-digits1);if(to&&(prefix2=to.slice(0,-4-digits2)),to&&prefix1!=prefix2)this.push(this.p.loadImage(from)),this.push(this.p.loadImage(to));else{let fileName,num1=parseInt(from.slice(-4-digits1,-4),10);if(num2??=parseInt(to.slice(-4-digits2,-4),10),num2<num1){let t=num2;num2=num1,num1=t}if(to&&digits1!=digits2)for(let i=num1;i<=num2;i++)fileName=prefix1+i+".png",this.push(this.p.loadImage(fileName));else for(let i=num1;i<=num2;i++)fileName=prefix1+this.p.nf(i,digits1)+".png",this.push(this.p.loadImage(fileName))}}}get frameDelay(){return this._frameDelay}set frameDelay(val){val<=0&&(val=1),this._frameDelay=val}get scale(){return this._scale}set scale(val){"number"==typeof val&&(val={x:val,y:val}),this._scale._x=val.x,this._scale._y=val.y,this._scale._avg=val.x}clone(){let ani=new this.p.SpriteAnimation;ani.spriteSheet=this.spriteSheet;for(let i=0;i<this.length;i++)ani.push(this[i]);return ani.offset.x=this.offset.x,ani.offset.y=this.offset.y,ani.frameDelay=this.frameDelay,ani.playing=this.playing,ani.looping=this.looping,ani.rotation=this.rotation,ani}draw(x,y,r,sx,sy){if(this.x=x||0,this.y=y||0,!this.visible)return;sx??=1,sy??=1,this.p.push(),this.p.imageMode("center"),this.p.translate(this.x,this.y),this.p.rotate(r||this.rotation),this.p.scale(sx*this._scale._x,sy*this._scale._y);let img=this[this.frame];if(void 0!==img)if(this.spriteSheet){let{x:x,y:y,w:w,h:h}=img;this.demoMode?this.p.image(this.spriteSheet,this.offset.x,this.offset.y,this.spriteSheet.w,this.spriteSheet.h,x-this.spriteSheet.w/2+w/2,y-this.spriteSheet.h/2+h/2):this.p.image(this.spriteSheet,this.offset.x,this.offset.y,w,h,x,y,w,h)}else this.p.image(img,this.offset.x,this.offset.y);else log("Warning: "+this.name+" animation not loaded yet or frame "+this.frame+" does not exist. Load this animation in the p5.js preload function if you need to use it at the start of your program.");this.p.pop()}update(){this._cycles++;this.frame;if(this.frameChanged=!1,1===this.length&&(this.playing=!1,this.frame=0),this.playing&&this._cycles%this.frameDelay==0){if(this.frameChanged=!0,(-1==this.targetFrame&&this.frame==this.lastFrame||this.frame==this.targetFrame)&&(this.endOnFirstFrame&&(this.frame=0),this.looping?this.targetFrame=-1:this.playing=!1,this._onComplete&&this._onComplete(),this.onComplete&&this.onComplete(),!this.looping))return;this.targetFrame>this.frame&&-1!==this.targetFrame?this.frame++:this.targetFrame<this.frame&&-1!==this.targetFrame?this.frame--:this.targetFrame===this.frame&&-1!==this.targetFrame?this.playing=!1:this.looping?this.frame>=this.lastFrame?this.frame=0:this.frame++:this.frame<this.lastFrame&&this.frame++}}play(frame){return this.playing=!0,void 0!==frame&&(this.frame=frame),this.targetFrame=-1,new Promise((resolve=>{this._onComplete=()=>{this._onComplete=null,resolve()}}))}pause(frame){this.playing=!1,frame&&(this.frame=frame)}stop(frame){this.playing=!1,frame&&(this.frame=frame)}rewind(){return this.looping=!1,this.goToFrame(0)}loop(){this.looping=!0,this.playing=!0}noLoop(){this.looping=!1}nextFrame(){this.frame<this.length-1?this.frame=this.frame+1:this.looping&&(this.frame=0),this.targetFrame=-1,this.playing=!1}previousFrame(){this.frame>0?this.frame=this.frame-1:this.looping&&(this.frame=this.length-1),this.targetFrame=-1,this.playing=!1}goToFrame(toFrame){if(!(toFrame<0||toFrame>=this.length))return this.targetFrame=toFrame,this.targetFrame!==this.frame&&(this.playing=!0),new Promise((resolve=>{this._onComplete=()=>{this._onComplete=null,resolve()}}))}get lastFrame(){return this.length-1}get frameImage(){let img=this[this.frame];if(img instanceof p5.Image)return img;let{x:x,y:y,w:w,h:h}=img,g=createGraphics(w,h);return g.image(this.spriteSheet,this.offset.x,this.offset.y,w,h,x,y,w,h),g}get w(){return this.width}get width(){return this[this.frame]instanceof p5.Image?this[this.frame].width:this[this.frame]?this[this.frame].w:1}get h(){return this.height}get height(){return this[this.frame]instanceof p5.Image?this[this.frame].height:this[this.frame]?this[this.frame].h:1}get frames(){let frames=[];for(let i=0;i<this.length;i++)frames.push(this[i]);return frames}get images(){return this.frames}},this.SpriteAnimation.props=["frameDelay","frameSize","looping","offset","rotation","scale","demoMode"],this.SpriteAnimations=class{#_={};constructor(){let _this=this,props=[...pInst.SpriteAnimation.props],vecProps=["offset","scale"];for(let prop of props)Object.defineProperty(this,prop,{get:()=>_this.#_[prop],set(val){_this.#_[prop]=val;for(let k in _this){let x=_this[k];x instanceof SpriteAnimation&&(x[prop]=val)}}});for(let vecProp of vecProps){this.#_[vecProp]={_x:0,_y:0};for(let prop of["x","y"])Object.defineProperty(this.#_[vecProp],prop,{get:()=>_this.#_[vecProp]["_"+prop],set(val){_this.#_[vecProp]["_"+prop]=val;for(let k in _this){let x=_this[k];x instanceof SpriteAnimation&&(x[vecProp][prop]=val)}}})}}},this.Group=class extends Array{constructor(...args){let parent;if(args[0]instanceof pInst.Group&&(parent=args[0],args=args.slice(1)),super(...args),this.p=pInst,"number"==typeof args[0])return;for(let s of this)if(!(s instanceof this.p.Sprite))throw new Error("A group can only contain sprites");if(this.idNum=this.p.p5play.groupsCreated,this._uid=this.idNum,this.p.p5play.groups[this._uid]=this,this.p.p5play.groupsCreated++,this.p.allSprites||(this._isAllSpritesGroup=!0),this.subgroups=[],parent instanceof this.p.Group){parent.subgroups.push(this);let p=parent;do{p=this.p.p5play.groups[p.parent],p.subgroups.push(this)}while(!p._isAllSpritesGroup);this.parent=parent._uid}else this._isAllSpritesGroup||(this.p.allSprites.subgroups.push(this),this.parent=0);this.animations=new this.p.SpriteAnimations,this._collides={},this._colliding={},this._collided={},this._hasOverlap={},this._overlaps={},this._overlapping={},this._overlapped={},this._collisions={},this._overlappers={};let _this=this;this.Sprite=class extends this.p.Sprite{constructor(){super(_this,...arguments)}},this.GroupSprite=this.Sprite,this.Group=class extends this.p.Group{constructor(){super(_this,...arguments)}},this.Subgroup=this.Group,this.mouse={presses:null,pressing:null,pressed:null,holds:null,holding:null,held:null,released:null,hovers:null,hovering:null,hovered:null};for(let state in this.mouse)this.mouse[state]=function(inp){for(let s of _this)if(s.mouse[state](inp))return!0;return!1};let props=[...this.p.Sprite.propsAll,"spriteSheet"];for(let prop of props)"ani"!=prop&&"velocity"!=prop&&Object.defineProperty(this,prop,{get(){let val=_this["_"+prop],i=_this.length-1;if(void 0===val&&!_this._isAllSpritesGroup){let parent=this.p.p5play.groups[_this.parent];parent&&(val=parent[prop],i=parent.length-1)}return val},set(val){_this["_"+prop]=val;for(let i=0;i<_this.length;i++){let s=_this[i],v=val;"function"==typeof val&&(v=val(i)),s[prop]=v}}});let vecProps=["mirror","offset","scale","vel"];for(let vecProp of vecProps){vecProp="_"+vecProp,this[vecProp]="vel"!=vecProp?{}:new this.p.Vector,this[vecProp]._x=0,this[vecProp]._y=0;for(let prop of["x","y"])Object.defineProperty(this[vecProp],prop,{get(){let val=_this[vecProp]["_"+prop],i=_this.length-1;if(void 0===val&&!_this._isAllSpritesGroup){let parent=_this.p.p5play.groups[_this.parent];parent&&(val=parent[vecProp][prop],i=parent.length-1)}return val},set(val){_this[vecProp]["_"+prop]=val;for(let i=0;i<_this.length;i++){let s=_this[i],v=val;"function"==typeof val&&(v=val(i)),s[vecProp][prop]=v}}})}this._orbitAngle=0,this._isAllSpritesGroup&&(this.autoCull=!0,this.tileSize=1,this.autoDraw=!0,this.autoUpdate=!0),this.add=this.push,this.contains=this.includes}_getTopLayer(){if(0==this.length)return 0;if(1==this.length&&void 0===this[0]._layer)return 0;let max=this[0]._layer;for(let s of this)s._layer>max&&(max=s._layer);return max}get ani(){return this._ani}set ani(val){this.addAni(val);for(let s of this)s.changeAni(val)}get animation(){return this._ani}set animation(val){this.ani=val}get anis(){return this.animations}get img(){return this._ani.frameImage}set img(val){this.ani=val}get image(){return this._ani.frameImage}set image(val){this.ani=val}set amount(val){let diff=val-this.length,shouldAdd=diff>0;diff=Math.abs(diff);for(let i=0;i<diff;i++)shouldAdd?new this.Sprite:this[this.length-1].remove()}_resetCentroid(){let x=0,y=0;for(let s of this)x+=s.x,y+=s.y;return this.centroid={x:x/this.length,y:y/this.length},this.centroid}_resetDistancesFromCentroid(){for(let s of this)s.distCentroid={x:s.x-this.centroid.x,y:s.y-this.centroid.y}}_ensureCollide(target,callback){if(!target)throw new FriendlyError("Group.collide",2);if(!(target instanceof this.p.Sprite||target instanceof this.p.Group))throw new FriendlyError("Group.collide",0,[target]);if(callback&&"function"!=typeof callback)throw new FriendlyError("Group.collide",1,[callback]);if(!1!==this._hasOverlap[target._uid]){this._hasOverlap[target._uid]=!1;for(let s of this)s._hasOverlap[target._uid]=!1}if(!1!==target._hasOverlap[this._uid]&&(target._hasOverlap[this._uid]=!1,target instanceof this.p.Group))for(let s of target)s._hasOverlap[this._uid]=!1}collide(target,callback){return this.collides(target,callback)}collides(target,callback){return this._ensureCollide(target,callback),this._collides[target._uid]=callback||!0,1==this._collisions[target._uid]}colliding(target,callback){this._ensureCollide(target,callback),this._colliding[target._uid]=callback||!0;let val=this._collisions[target._uid];return val>0?val:0}collided(target,callback){return this._ensureCollide(target,callback),this._collided[target._uid]=callback||!0,-1==this._collisions[target._uid]}_removeContactsWith(o){for(let s of this)s._removeContactsWith(o)}_ensureOverlap(target,callback){if(!target)throw new FriendlyError("Group.overlap",2);if(!(target instanceof this.p.Sprite||target instanceof this.p.Group))throw new FriendlyError("Group.overlap",0,[target]);if(callback&&"function"!=typeof callback)throw new FriendlyError("Group.overlap",1,[callback]);if(!this._hasSensors){for(let s of this)s._hasSensors||s.addDefaultSensors();this._hasSensors=!0}if(!target._hasSensors)if(target instanceof this.p.Sprite)target.addDefaultSensors();else{for(let s of target)s._hasSensors||s.addDefaultSensors();target._hasSensors=!0}if(1!=this._hasOverlap[target._uid]){this._removeContactsWith(target),this._hasOverlap[target._uid]=!0;for(let s of this)s._hasOverlap[target._uid]=!0}if(1!=target._hasOverlap[this._uid]&&(target._removeContactsWith(this),target._hasOverlap[this._uid]=!0,target instanceof this.p.Group))for(let s of target)s._hasOverlap[this._uid]=!0}overlap(target,callback){return this.overlaps(target,callback)}overlaps(target,callback){return this._ensureOverlap(target,callback),this._overlaps[target._uid]=callback||!0,1==this._overlappers[target._uid]}overlapping(target,callback){this._ensureOverlap(target,callback),this._overlapping[target._uid]=callback||!0;let val=this._overlappers[target._uid];return val>0?val:0}overlapped(target,callback){return this._ensureOverlap(target,callback),this._overlapped[target._uid]=callback||!0,-1==this._overlappers[target._uid]}applyForce(x,y,originX,originY){for(let s of this)s.applyForce(x,y,originX,originY)}move(distance,direction,speed){let movements=[];for(let s of this)movements.push(s.move(distance,direction,speed));return Promise.all(movements)}moveTo(x,y,speed){if("number"!=typeof x){let obj=x;if(obj==this.p.mouse&&!this.p.mouse.active)return;speed=y,y=obj.y,x=obj.x}let centroid=this._resetCentroid(),movements=[];for(let s of this){let dest={x:s.x-centroid.x+x,y:s.y-centroid.y+y};movements.push(s.moveTo(dest.x,dest.y,speed))}return Promise.all(movements)}moveTowards(x,y,tracking){if("number"!=typeof x){let obj=x;if(obj==this.p.mouse&&!this.p.mouse.active)return;tracking=y,y=obj.y,x=obj.x}if(void 0!==x||void 0!==y){this._resetCentroid();for(let s of this){void 0===s.distCentroid&&this._resetDistancesFromCentroid();let dest={x:s.distCentroid.x+x,y:s.distCentroid.y+y};s.moveTowards(dest.x,dest.y,tracking)}}}moveAway(x,y,tracking){if("number"!=typeof x){let obj=x;if(obj==this.p.mouse&&!this.p.mouse.active)return;tracking=y,y=obj.y,x=obj.x}if(void 0!==x||void 0!==y){this._resetCentroid();for(let s of this){void 0===s.distCentroid&&this._resetDistancesFromCentroid();let dest={x:s.distCentroid.x+x,y:s.distCentroid.y+y};s.moveAway(dest.x,dest.y,tracking)}}}orbit(amount){this.p.frameCount,this.centroid||this._resetCentroid(),this._orbitAngle+=amount;let angle=this._orbitAngle;for(let s of this){void 0===s.distCentroid&&this._resetDistancesFromCentroid();let x=s.distCentroid.x,y=s.distCentroid.y,x2=x*this.p.cos(angle)-y*this.p.sin(angle),y2=x*this.p.sin(angle)+y*this.p.cos(angle);x2+=this.centroid.x,y2+=this.centroid.y,s.vel.x=.1*(x2-s.x)*s.tileSize,s.vel.y=.1*(y2-s.y)*s.tileSize}}get(i){return this[i]}push(...sprites){for(let s of sprites){if(!(s instanceof this.p.Sprite))throw new Error("you can only add sprites to a group, no "+typeof s+"s");super.push(s),this.parent&&this.p.p5play.groups[this.parent].push(s),s.groups.push(this)}return this.length}size(){return this.length}toString(){return"g"+this.idNum}cull(top,bottom,left,right,cb){if(void 0===left){cb=bottom,top=bottom=left=right=top}if(isNaN(top)||isNaN(bottom)||isNaN(left)||isNaN(right))throw new TypeError("The culling boundary must be defined with numbers");if(cb&&"function"!=typeof cb)throw new TypeError("The callback to group.cull must be a function");let cx=this.p.camera.x-this.p.world.hw/this.p.camera.zoom,cy=this.p.camera.y-this.p.world.hh/this.p.camera.zoom,minX=-left+cx,minY=-top+cy,maxX=this.p.width+right+cx,maxY=this.p.height+bottom+cy,culled=0;for(let i=0;i<this.length;i++){let s=this[i];(s.x<minX||s.y<minY||s.x>maxX||s.y>maxY)&&(culled++,cb?cb(s,culled):s.remove(),s.removed&&i--)}return culled}remove(item){if(void 0===item){for(;this.length>0;)this[0].remove();return}let idx;if(idx="number"==typeof item?item>=0?item:this.length+item:this.indexOf(item),-1!=idx){let s=this[idx];if(!s.removed){let gIdx=s.groups.findIndex((g=>g._uid==this._uid));s.groups.splice(gIdx,1)}return this.splice(idx,1),s}throw new Error("Sprite not found in group")}removeAll(){this.remove()}draw(){let g=[...this];g.sort(((a,b)=>a._layer-b._layer));for(let i=0;i<g.length;i++){let sprite=g[i];2147483647!=sprite._life&&sprite._life--<0?(sprite.remove(),g.splice(i,1),i--):!sprite.visible||this.p.p5play._inPostDraw&&!sprite.autoDraw||sprite.draw()}this._autoDraw&&(this._autoDraw=null)}update(){for(let s of this)this.p.p5play._inPostDraw&&!this.autoUpdate||s.update();this._autoUpdate&&(this._autoUpdate=null)}},this.Sprite.prototype.addAnimation=this.Group.prototype.addAnimation=this.Sprite.prototype.addAni=this.Group.prototype.addAni=this.Sprite.prototype.addImage=this.Group.prototype.addImage=this.Sprite.prototype.addImg=this.Group.prototype.addImg=function(){let name,ani,args=[...arguments];return args[0]instanceof this.p.SpriteAnimation?(ani=args[0],name=ani.name||"default",ani.name=name):args[1]instanceof this.p.SpriteAnimation?(name=args[0],ani=args[1],ani.name=name):(ani=new this.p.SpriteAnimation(this,...args),name=ani.name),this.animations[name]=ani,this._ani=ani,!this._dimensionsUndefinedByUser||1==ani.w&&1==ani.h||(this.w=ani.w,this.h=ani.h),ani},this.Sprite.prototype.addAnis=this.Group.prototype.addAnis=this.Sprite.prototype.addAnimations=this.Group.prototype.addAnimations=this.Sprite.prototype.addImages=this.Group.prototype.addImages=this.Sprite.prototype.addImgs=this.Group.prototype.addImgs=function(){let atlases,args=arguments;1==args.length?atlases=args[0]:(this.spriteSheet=args[0],atlases=args[1]);for(let name in atlases){let atlas=atlases[name];this.addAni(name,atlas)}},this.World=class extends pl.World{constructor(){super(new pl.Vec2(0,0),!0),this.p=pInst,this.mod=[],this._offset={x:0,y:0};let _this=this;this.offset={get x(){return _this._offset.x},set x(val){_this._offset.x=val||0,_this.resize()},get y(){return _this._offset.y},set y(val){_this._offset.y=val||0,_this.resize()}},this.resize(),this.contacts=[],this.on("begin-contact",this._beginContact),this.on("end-contact",this._endContact),this._gravity={get x(){return _this.m_gravity.x},set x(val){if((val=Math.round(val||0))!=_this.m_gravity.x){_this.mod[0]=!0;for(let s of _this.p.allSprites)s.sleeping=!1;_this.m_gravity.x=val}},get y(){return _this.m_gravity.y},set y(val){if((val=Math.round(val||0))!=_this.m_gravity.y){_this.mod[0]=!0;for(let s of _this.p.allSprites)s.sleeping=!1;_this.m_gravity.y=val}}},this.velocityThreshold=.19,this.mouseTracking??=!0,this.mouseSprite=null,this.mouseSprites=[],this.autoStep=!0}get gravity(){return this._gravity}set gravity(val){this._gravity.x=val.x,this._gravity.y=val.y}get velocityThreshold(){return this._velocityThreshold}set velocityThreshold(val){pl.Settings.velocityThreshold=val,this._velocityThreshold=val}resize(w,h){w??=this.p.width,h??=this.p.height,this.origin={x:.5*w-this.offset.x,y:.5*h-this.offset.y},1!=this.p.allSprites.tileSize&&(this.origin.x-=.5*this.p.allSprites.tileSize,this.origin.y-=.5*this.p.allSprites.tileSize),this.hw=.5*w,this.hh=.5*h}step(timeStep,velocityIterations,positionIterations){for(let s of this.p.allSprites)s.prevPos.x=s.x,s.prevPos.y=s.y,s.prevRotation=s.rotation;super.step(timeStep||1/(this.p._targetFrameRate||60),velocityIterations||8,positionIterations||3);let sprites=Object.values(this.p.p5play.sprites);for(let s of sprites)s._step();this.autoStep&&(this.autoStep=null)}getSpritesAt(x,y,group,cameraActiveWhenDrawn){cameraActiveWhenDrawn??=!0;const convertedPoint=new pl.Vec2(x/60,y/60),aabb=new pl.AABB;aabb.lowerBound=new pl.Vec2(convertedPoint.x-.001,convertedPoint.y-.001),aabb.upperBound=new pl.Vec2(convertedPoint.x+.001,convertedPoint.y+.001);let fxts=[];this.queryAABB(aabb,(fxt=>(fxt.getShape().testPoint(fxt.getBody().getTransform(),convertedPoint)&&fxts.push(fxt),!0))),group??=this.p.allSprites;let sprites=[];if(fxts.length>0)for(let s of group)s.body&&fxts.includes(s.body.m_fixtureList)&&s._cameraActiveWhenDrawn==cameraActiveWhenDrawn&&sprites.push(s);return sprites}getSpriteAt(x,y,group){let sprites=this.getSpritesAt(x,y,group);return sprites.sort(((a,b)=>-1*(a._layer-b._layer))),sprites[0]}_beginContact(contact){let a=contact.m_fixtureA,b=contact.m_fixtureB,t="_collisions";a.m_isSensor&&(t="_overlappers"),a=a.m_body.sprite,b=b.m_body.sprite,a[t][b._uid]=0,b[t][a._uid]=0;for(let g of b.groups)(!a[t][g._uid]||a[t][g._uid]<0)&&(g[t][a._uid]=0,a[t][g._uid]=0);for(let g of a.groups){(!b[t][g._uid]||b[t][g._uid]<0)&&(g[t][b._uid]=0,b[t][g._uid]=0);for(let g2 of b.groups)(!g[t][g2._uid]||g[t][g2._uid]<0)&&(g[t][g2._uid]=0,g2[t][g._uid]=0)}}_endContact(contact){let a=contact.m_fixtureA,b=contact.m_fixtureB,contactType="_collisions";a.m_isSensor&&(contactType="_overlappers"),a=a.m_body.sprite,b=b.m_body.sprite,a[contactType][b._uid]=-2,b[contactType][a._uid]=-2;for(let g of b.groups){let inContact=!1;for(let s of g)if(s[contactType][a._uid]>=0){inContact=!0;break}inContact||(g[contactType][a._uid]=-2,a[contactType][g._uid]=-2)}for(let g of a.groups){let inContact=!1;for(let s of g)if(s[contactType][b._uid]>=0){inContact=!0;break}if(!inContact){g[contactType][b._uid]=-2,b[contactType][g._uid]=-2;for(let g2 of b.groups)g[contactType][g2._uid]=-2,g2[contactType][g._uid]=-2}}}_findContactCB(type,s0,s1){let cb=s0[type][s1._uid];if(cb)return cb;let s1IsSprite=s1 instanceof this.p.Sprite;if(s1IsSprite)for(let g1 of s1.groups)if(cb=s0[type][g1._uid],cb)return cb;if(s0 instanceof this.p.Sprite)for(let g0 of s0.groups){if(cb=g0[type][s1._uid],cb)return cb;if(s1IsSprite)for(let g1 of s1.groups)if(cb=g0[type][g1._uid],cb)return cb}return!1}get allowSleeping(){return this.getAllowSleeping()}set allowSleeping(val){this.setAllowSleeping(val)}},this.Camera=class{constructor(x,y,zoom){this.p=pInst;this._pos={x:0,y:0},this.__pos={x:0,y:0},this.mouse={x:this.p.mouseX,y:this.p.mouseY},this.active=!1,this.bound={min:{x:0,y:0},max:{x:0,y:0}},this._zoomIdx=-1,this._zoom=zoom||1,this.x=x||0,this.y=y||0}get pos(){return this._pos}get position(){return this._pos}get x(){return this._pos.x}set x(val){this._pos.x=val;let x=-val+this.p.world.hw/this._zoom;this.p.allSprites.pixelPerfect&&(x=Math.round(x)),this.__pos.x=x,this.bound.min.x=val-this.p.world.hw/this._zoom-100,this.bound.max.x=val+this.p.world.hw/this._zoom+100}get y(){return this._pos.y}set y(val){this._pos.y=val;let y=-val+this.p.world.hh/this._zoom;this.p.allSprites.pixelPerfect&&(y=Math.round(y)),this.__pos.y=y,this.bound.min.y=val-this.p.world.hh/this._zoom-100,this.bound.max.y=val+this.p.world.hh/this._zoom+100}get zoom(){return this._zoom}set zoom(val){this._zoom=val;let x=-this._pos.x+this.p.world.hw/val,y=-this._pos.y+this.p.world.hh/val;this.p.allSprites.pixelPerfect&&(x=Math.round(x),y=Math.round(y)),this.__pos.x=x,this.__pos.y=y}zoomTo(target,speed){if(target==this._zoom)return Promise.resolve(!0);speed??=.1;let delta=Math.abs(target-this._zoom),frames=Math.round(delta/speed);target<this.zoom&&(speed=-speed),this._zoomIdx++;let zoomIdx=this._zoomIdx;return(async()=>{for(let i=0;i<frames;i++){if(zoomIdx!=this._zoomIdx)return!1;this.zoom+=speed,await this.p.delay()}return this.zoom=target,!0})()}on(){this.active||(this.p.push(),this.p.scale(this._zoom),this.p.translate(this.__pos.x,this.__pos.y),this.active=!0)}off(){this.active&&(this.p.pop(),this.active=!1)}},pl.Fixture.prototype.shouldCollide=function(that){let a=this,b=that;if(a.m_isSensor&&b.m_isSensor)return!0;if(a.m_isSensor||b.m_isSensor)return!1;a=a.m_body.sprite,b=b.m_body.sprite;let shouldOverlap=a.p.world._findContactCB("_hasOverlap",a,b);return shouldOverlap||(shouldOverlap=a.p.world._findContactCB("_hasOverlap",b,a)),!shouldOverlap},this.Tiles=class{constructor(tiles,x,y,w,h){"string"==typeof tiles&&(tiles=tiles.split("\n")),x??=0,y??=0,w??=1,h??=1;for(let row=0;row<tiles.length;row++)for(let col=0;col<tiles[row].length;col++){let ani,g,t=tiles[row][col];if(" "==t||"."==t)continue;let groups=Object.values(pInst.p5play.groups);for(g of groups)if(ani=g.animations[t],ani)break;if(ani){new g.Sprite(ani,x+col*w,y+row*h);continue}let s,wasFound=!1;for(g of groups)if(g.tile==t){wasFound=!0;break}if(wasFound)new g.Sprite(x+col*w,y+row*h);else{for(s of pInst.allSprites)if(s.tile==t){wasFound=!0;break}if(!wasFound)throw"Tile not found: "+t;s.x=x+col*w,s.y=y+row*h}}}},this.createTiles=function(tiles,x,y,w,h){return new this.Tiles(tiles,x,y,w,h)};class Scale{constructor(){let _this=this;Object.defineProperties(this,{x:{get:()=>_this._x,set(val){val!=_this._x&&(_this._x=val,_this._avg=.5*(_this._x+_this._y))},configurable:!0,enumerable:!0},y:{get:()=>_this._y,set(val){val!=_this._y&&(_this._y=val,_this._avg=.5*(_this._x+_this._y))},configurable:!0,enumerable:!0},_x:{value:1,enumerable:!1,writable:!0},_y:{value:1,enumerable:!1,writable:!0},_avg:{value:1,enumerable:!1,writable:!0}})}valueOf(){return this._avg}}const encodeFloat16=function(){let fv=new Float32Array(1),iv=new Int32Array(fv.buffer);return function(v){fv[0]=v;let x=iv[0],b=x>>16&32768,m=x>>12&2047,e=x>>23&255;return e<103?b:e>142?(b|=31744,b|=(255==e?0:1)&&8388607&x,b):e<113?(m|=2048,b|=(m>>114-e)+(m>>113-e&1),b):(b|=e-112<<10|m>>1,b+=1&m,b)}}();function isArrowFunction(fn){return!/^(?:(?:\/\*[^(?:\*\/)]*\*\/\s*)|(?:\/\/[^\r\n]*))*\s*(?:(?:(?:async\s(?:(?:\/\*[^(?:\*\/)]*\*\/\s*)|(?:\/\/[^\r\n]*))*\s*)?function|class)(?:\s|(?:(?:\/\*[^(?:\*\/)]*\*\/\s*)|(?:\/\/[^\r\n]*))*)|(?:[_$\w][\w0-9_$]*\s*(?:\/\*[^(?:\*\/)]*\*\/\s*)*\s*\()|(?:\[\s*(?:\/\*[^(?:\*\/)]*\*\/\s*)*\s*(?:(?:['][^']+['])|(?:["][^"]+["]))\s*(?:\/\*[^(?:\*\/)]*\*\/\s*)*\s*\]\())/.test(fn.toString())}function getRegularPolygon(l,n){return"triangle"==n?l=[l,-120,3]:"square"==n?l=[l,-90,4]:"pentagon"==n?l=[l,-72,5]:"hexagon"==n?l=[l,-60,6]:"septagon"==n?l=[l,-51.4285714286,7]:"octagon"==n?l=[l,-45,8]:"enneagon"==n?l=[l,-40,9]:"decagon"==n?l=[l,-36,10]:"hendecagon"==n?l=[l,-32.7272727273,11]:"dodecagon"==n&&(l=[l,-30,12]),l}this.Netcode=class{constructor(){this.typeSizes={boolean:1,Uint8:1,Vec2_boolean:1,Float16:2,number:2,color:4,Float32:4,Int32:4,Vec2:4,Float64:8},this.player=0}connect(){}disconnect(){}spriteToBinary(sprite){const props=pInst.Sprite.props;let size=3;for(let i=0;i<props.length;i++){if(sprite.watch&&!sprite.mod[i])continue;const prop=props[i],type=pInst.Sprite.propTypes[prop];let val=sprite[prop];if("ani"==prop&&(val=val?.name),null!=val)if("string"==type){size+=(new TextEncoder).encode(val).length+3}else size+=this.typeSizes[type]+1}if(3==size)return null;const buffer=new ArrayBuffer(size),data=new DataView(buffer);data.setFloat16=(o,v)=>data.setUint16(o,encodeFloat16(v)),data.setUint16(0,sprite._uid);let o=2;for(let i=0;i<props.length;i++){if(sprite.watch&&!sprite.mod[i])continue;const prop=props[i],type=pInst.Sprite.propTypes[prop];let val=sprite[prop];if(null!=val){if(data.setUint8(o,i),o+=1,"boolean"==type)data.setUint8(o,val?1:0);else if("number"==type||"Float16"==type)data.setFloat16(o,val);else if("Float32"==type)data.setFloat32(o,val);else if("Float64"==type)data.setFloat64(o,val);else{if("string"==type){"ani"==prop&&(val=val.name);const encoded=(new TextEncoder).encode(val);data.setUint16(o,encoded.length),o+=2;for(let j=0;j<encoded.length;j++)data.setUint8(o,encoded[j]),o+=1;continue}"color"==type?(data.setUint8(o,val.levels[0]),data.setUint8(o+1,val.levels[1]),data.setUint8(o+2,val.levels[2]),data.setUint8(o+3,val.levels[3])):"Vec2"==type?(data.setFloat16(o,val.x),data.setFloat16(o+2,val.y)):"Vec2_boolean"==type?data.setUint8(o,(val.x?1:0)|(val.y?2:0)):"Uint8"==type?"collider"==prop?data.getUint8(o,sprite.__collider):"shape"==prop?data.getUint8(o,sprite.__shape):data.getUint8(o,val):"Int32"==type&&data.setInt32(o,val)}o+=this.typeSizes[type]}}return data.setUint8(o,255),sprite.watch=!0,sprite.mod=[],new Uint8Array(buffer)}binaryToSprite(binary,offset){let data;data=binary instanceof DataView?binary:new DataView(binary.buffer),data.getFloat16=o=>function(b){let e=(31744&b)>>10,f=1023&b;return(b>>15?-1:1)*(e?31===e?f?NaN:1/0:Math.pow(2,e-15)*(1+f/1024):f/1024*6103515625e-14)}(data.getUint16(o));let o=offset||0,uid=data.getUint16(o);o+=2;let sprite=pInst.p5play.sprites[uid]||new pInst.Sprite;for(;o!==data.byteLength;){const propId=data.getUint8(o);if(255===propId)break;o+=1;const prop=pInst.Sprite.props[propId],type=pInst.Sprite.propTypes[prop];if("boolean"===type)sprite[prop]=0!==data.getUint8(o);else if("number"==type||"Float16"===type)sprite[prop]=data.getFloat16(o);else if("Float32"===type)sprite[prop]=data.getFloat32(o);else if("Float64"===type)sprite[prop]=data.getFloat64(o);else{if("string"===type){const strLength=data.getUint16(o);o+=2;const strBytes=new Uint8Array(data.buffer,o,strLength);sprite[prop]=(new TextDecoder).decode(strBytes),o+=strLength;continue}if("color"===type){const r=data.getUint8(o),g=data.getUint8(o+1),b=data.getUint8(o+2),a=data.getUint8(o+3);sprite[prop]=color(r,g,b,a)}else if("Vec2"===type){const x=data.getFloat16(o),y=data.getFloat16(o+2);sprite[prop]={x:x,y:y}}else if("Vec2_boolean"===type){const byte=data.getUint8(o);sprite[prop]={x:1==(1&byte),y:2==(2&byte)}}else if("Uint8"===type){let val=data.getUint8(o);"collider"===prop?sprite.collider=pInst.Sprite.colliderTypes[val]:"shape"===prop?sprite.shape=pInst.Sprite.shapeTypes[val]:sprite[prop]=val}else"Int32"===type&&(sprite[prop]=data.getInt32(o))}o+=this.typeSizes[type]}return data.offset=o,sprite}inputToJSON(){}},this.netcode=new this.Netcode,this.updateSprites=function(){this.frameCount,this.world.step(...arguments),this.allSprites.update()},this.p5play.palettes??=[{a:"aqua",b:"black",c:"crimson",d:"dark blue",f:"fuchsia",g:"green",h:"hot pink",i:"blue",k:"black",l:"lavender",m:"magenta",n:"brown",o:"orange",p:"pink",r:"red",s:"sky blue",t:"turquoise",u:"blue",v:"violet",w:"white",y:"yellow"}],this.colorPal=(c,palette)=>{if(c instanceof p5.Color)return c;let clr;return"number"==typeof palette&&(palette=pInst.p5play.palettes[palette]),palette??=pInst.p5play.palettes[0],palette&&(clr=palette[c]),""===clr||"."===c||" "===c?pInst.color(0,0,0,0):pInst.color(clr||c)},this.spriteArt=(txt,scale,palette)=>{scale??=1,"number"==typeof palette&&(palette=pInst.p5play.palettes[palette]),palette??=pInst.p5play.palettes[0];let lines=txt;"string"==typeof txt&&(lines=(txt=(txt=(txt=txt.trim()).replace(/\r*\n\t+/g,"\n")).replace(/\s+$/g,"")).split("\n"));let w=0;for(let line of lines)line.length>w&&(w=line.length);let h=lines.length,img=pInst.createImage(w*scale,h*scale);img.loadPixels();for(let i=0;i<lines.length;i++)for(let j=0;j<lines[i].length;j++)for(let sX=0;sX<scale;sX++)for(let sY=0;sY<scale;sY++){let c=this.colorPal(lines[i][j],palette);img.set(j*scale+sX,i*scale+sY,c)}return img.updatePixels(),img.w=img.width,img.h=img.height,pInst.p5play.images.onLoad(img),img},this.drawSprite=function(sprite){this.frameCount,sprite.draw()},this.drawSprites=function(group){this.frameCount,group??=this.allSprites,group.draw()},this.createSprite=function(){return new this.Sprite(...arguments)},this.createGroup=function(){return new this.Group(...arguments)},this.loadAni=this.loadAnimation=function(){return new this.SpriteAnimation(...arguments)},this.animation=function(ani,x,y,r,sX,sY){ani.visible&&ani.update(),ani.draw(x,y,r,sX,sY)},this.delay=millisecond=>new Promise(millisecond?resolve=>{setTimeout(resolve,millisecond)}:requestAnimationFrame),this.sleep=millisecond=>this.delay(millisecond),this.play=sound=>{if(!sound.play)throw new Error("Tried to play a sound but the sound is not a sound object: "+sound);return new Promise(((resolve,reject)=>{sound.play(),sound.onended((()=>resolve()))}))},this.p5play.playIntro=async function(){if(document.getElementById("p5play-intro"))return;pInst._incrementPreload();let d=document.createElement("div");d.id="p5play-intro",d.style="position: absolute; width: 100%; height: 100%; top: 0; left: 0; z-index: 1000; background-color: black;";let logo=document.createElement("img");logo.src="https://p5play.org/v3/made_with_p5play.png",logo.style="position: absolute; top: 50%; left: 50%; width: 40vh; height: 20vh; margin-left: -20vh; margin-top: -10vh; z-index: 1000; opacity: 0; transition: opacity 0.1s ease-in-out;",document.body.append(d),d.append(logo),await pInst.delay(100),logo.style.opacity="1",logo.style.transition="scale 2s, opacity 0.4s ease-in-out",logo.style.scale="1.1",await pInst.delay(1200),logo.style.opacity="0",await pInst.delay(400),d.style.display="none",d.remove(),document.getElementById("p5play-intro")?.remove(),pInst._decrementPreload()};{let lh=location.hostname;switch(lh){case"":case"127.0.0.1":case"localhost":case"p5play.org":case"openprocessing.org":case"preview.openprocessing.org":case"editor.p5js.org":case"codepen.io":case"cdpn.io":case"glitch.com":case"replit.com":case"stackblitz.com":case"jsfiddle.net":break;default:if(lh.endsWith("stackblitz.io")||lh.endsWith("glitch.me")||lh.endsWith("repl.co")||location.origin.endsWith("preview.p5js.org"))break;this.p5play.playIntro()}}let userDisabledP5Errors=p5.disableFriendlyErrors;p5.disableFriendlyErrors=!0,this.canvas=this.canvas;const _createCanvas=this.createCanvas;this.createCanvas=function(){let w,h,ratio,scale,args=[...arguments],isFullScreen=!1,pixelated=!1;if("string"==typeof args[0]&&(args[0].includes(":")?ratio=args[0].split(":"):(args[2]=args[0],args[0]=void 0),"fullscreen"==args[1]&&(isFullScreen=!0)),args[0]?"number"==typeof args[0]&&"number"!=typeof args[1]&&(args[2]=args[1],args[1]=args[0]):(args[0]=window.innerWidth,args[1]=window.innerHeight,isFullScreen=!0),"string"==typeof args[2]&&(args[2]=args[2].toLowerCase(),"p2d"!=args[2]&&"webgl"!=args[2]&&(args[2]=args[2].split(" ")),"pixelated"==args[2][0]&&(pixelated=!0,args[2][1]?scale=Number(args[2][1].slice(1)):isFullScreen=!0,ratio=[args[0],args[1]]),"fullscreen"==args[2][0]&&(isFullScreen=!0)),ratio){let rW=Number(ratio[0]),rH=Number(ratio[1]);scale?(w=rW*scale,h=rH*scale):(w=window.innerWidth,h=window.innerWidth*(rH/rW),h>window.innerHeight&&(w=window.innerHeight*(rW/rH),h=window.innerHeight)),w=Math.round(w),h=Math.round(h),pixelated||(args[0]=w,args[1]=h)}args.length<3&&(args[2]="p2d");let can=_createCanvas.call(pInst,...args);this.canvas.tabIndex=0,this.canvas.w=args[0],this.canvas.h=args[1],this.canvas.addEventListener("keydown",(function(e){" "!=e.key&&"/"!=e.key&&"ArrowUp"!=e.key&&"ArrowDown"!=e.key&&"ArrowLeft"!=e.key&&"ArrowRight"!=e.key||e.preventDefault()})),this.canvas.addEventListener("mouseover",(()=>{this.mouse.isOnCanvas=!0,this.mouse.active=!0})),this.canvas.addEventListener("mouseleave",(()=>{this.mouse.isOnCanvas=!1})),this.canvas.addEventListener("touchstart",(e=>{e.preventDefault()})),this.world.resize(),userDisabledP5Errors||(p5.disableFriendlyErrors=!1);let style="\ncanvas { \n\toutline: none;\n\t-webkit-touch-callout: none;\n\t-webkit-text-size-adjust: none;\n\t-webkit-user-select: none;\n\toverscroll-behavior: none;\n}\nmain{\n\toverscroll-behavior: none;\n}";isFullScreen&&(style="html,\nbody,\n"+style,style+="\nhtml, body {\n\tmargin: 0;\n\tpadding: 0;\n\toverflow: hidden;\n\theight: 100%;\n}\nmain {\n\tmargin: auto;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\talign-content: center;\n\tjustify-content: center;\n\theight: 100%;\n}"),pixelated&&(style+=`\ncanvas {\n\timage-rendering: pixelated;\n\twidth: ${w}px!important;\n\theight: ${h}px!important;\n}`);let styleElem=document.createElement("style");styleElem.innerHTML=style,document.head.appendChild(styleElem),pixelated&&(pInst.pixelDensity(1),pInst.noSmooth());let idx=navigator.userAgent.indexOf("iPhone OS");if(idx>-1){let version=navigator.userAgent.substring(idx+10,idx+12);this.p5play.version=version,version<16&&pInst.pixelDensity(1),this.p5play.os.platform="iOS",this.p5play.os.version=version}else void 0!==navigator.userAgentData&&(this.p5play.os.platform=navigator.userAgentData.platform);return can},this.Canvas=function(){return pInst.createCanvas(...arguments)};const _background=this.background;this.background=function(){let c,args=arguments;1==args.length&&("string"==typeof args[0]||args[0]instanceof p5.Color)&&(c=this.colorPal(args[0])),void 0!==c?_background.call(this,c):_background.call(this,...args)};const _fill=this.fill;this.fill=function(){let c,args=arguments;1==args.length&&(c=this.colorPal(args[0])),void 0!==c?_fill.call(this,c):_fill.call(this,...args)};const _stroke=this.stroke;this.stroke=function(){let c,args=arguments;1==args.length&&(c=this.colorPal(args[0])),void 0!==c?_stroke.call(this,c):_stroke.call(this,...args)},this.p5play.images={onLoad:img=>{}},this.p5play.disableImages=!1;const _loadImage=this.loadImage;this.loadImg=this.loadImage=function(){if(this.p5play.disableImages)return;let cb,args=arguments,url=args[0],img=pInst.p5play.images[url];if("function"==typeof args[args.length-1]&&(cb=args[args.length-1]),img)return 1==img.width&&1==img.height||!img.pixels.length?cb?(img.cbs.push(cb),img.calls++):pInst._decrementPreload():(cb&&cb(),pInst._decrementPreload()),img;return img=_loadImage.call(pInst,url,(_img=>{_img.w=_img.width,_img.h=_img.height;for(let cb of _img.cbs)cb(_img);for(let i=1;i<_img.calls;i++)pInst._decrementPreload();_img.cbs=[],pInst.p5play.images.onLoad(img)})),img.cbs=[],img.calls=1,cb&&img.cbs.push(cb),img.url=url,pInst.p5play.images[url]=img,img};let errMsgs={generic:["Ah! I found an error","Oh no! Something went wrong","Oof! Something went wrong","Houston, we have a problem","Whoops, having trouble here"],Sprite:{constructor:{base:"Sorry I'm unable to make a new Sprite",0:"What is $0 for? If you're trying to specify the x position of the sprite, please specify the y position as well.",1:"If you're trying to specify points for a chain Sprite, please use an array of position arrays.\n$0"},hw:{0:"I can't change the halfWidth of a Sprite directly, change the sprite's width instead."},hh:{1:"I can't change the halfHeight of a Sprite directly, change the sprite's height instead."},rotate:{0:"Can't use this function on a sprite with a static collider, try changing the sprite's collider type to kinematic.",1:'Can\'t use "$0" for the angle of rotation, it must be a number.'},rotateTo:{},rotateTowards:{},changeAnimation:'I can\'t find any animation named "$0".',collide:{0:"I can't make that sprite collide with $0. Sprites can only collide with another sprite or a group.",1:"The collision callback has to be a function.",2:"You're trying to check for an collision with a sprite or group that doesn't exist!"},overlap:{0:"I can't make that sprite overlap with $0. Sprites can only overlap with another sprite or a group.",1:"The overlap callback has to be a function.",2:"You're trying to check for an overlap with a sprite or group that doesn't exist!"}},SpriteAnimation:{constructor:{base:"Hey so, I tried to make a new SpriteAnimation but couldn't",0:'I don\'t know how to display this type of image: "$0". I can only use ".png" image files.',1:"The name of the animation must be the first input parameter."}},Group:{constructor:{base:"Hmm awkward! Well it seems I can't make that new Group you wanted"}}};errMsgs.Group.collide=errMsgs.Sprite.collide,errMsgs.Group.overlap=errMsgs.Sprite.overlap,errMsgs.Sprite.rotateTo[0]=errMsgs.Sprite.rotateTowards[0]=errMsgs.Sprite.rotate[0];class FriendlyError extends Error{constructor(func,errorNum,e){super(),"string"!=typeof func&&(e=errorNum,errorNum=func,func=(func=this.stack.match(/\n\s*at ([^\(]*)/)[1]).slice(0,-1)),"number"!=typeof errorNum&&(e=errorNum,errorNum=void 0),"new"==func.slice(0,3)&&(func=func.slice(4));let className=(func=func.split("."))[0];func=func[1]||"constructor";let ln=this.stack.match(/\/([^p\/][^5][^\/:]*:[^\/:]+):/);ln&&(ln=ln[1].split(":"),ln=" in "+ln[0]+" at line "+ln[1]),ln=" using "+className+"."+func+". ",e=e||[];let msg,m=errMsgs[className][func];msg=m.base?m.base+ln:errMsgs.generic[Math.floor(Math.random()*errMsgs.generic.length)]+ln,void 0!==errorNum&&(m=m[errorNum]),m=m.replace(/\$([0-9]+)/g,((m,n)=>e[n])),msg+=m,p5._friendlyError(msg,func)}}this.allSprites=new this.Group,this.world=new this.World,this.camera=new this.Camera,this.InputDevice=class{constructor(){this.holdThreshold=12}init(inputs){for(let inp of inputs)this[inp]=0}ac(inp){return inp}presses(inp){return inp??=this.default,void 0===this[inp]&&(inp=this.ac(inp)),1==this[inp]||-2==this[inp]}pressing(inp){return inp??=this.default,void 0===this[inp]&&(inp=this.ac(inp)),-2==this[inp]?1:this[inp]>0?this[inp]:0}pressed(inp){return this.released(inp)}holds(inp){return inp??=this.default,void 0===this[inp]&&(inp=this.ac(inp)),this[inp]==this.holdThreshold}holding(inp){return inp??=this.default,void 0===this[inp]&&(inp=this.ac(inp)),this[inp]>=this.holdThreshold?this[inp]:0}held(inp){return inp??=this.default,void 0===this[inp]&&(inp=this.ac(inp)),-3==this[inp]}released(inp){return inp??=this.default,void 0===this[inp]&&(inp=this.ac(inp)),this[inp]<=-1}releases(inp){return this.released(inp)}},this._Mouse=class extends this.InputDevice{constructor(){super();let _this=this;this._position={get x(){return _this.x},set x(val){_this.x=val},get y(){return _this.y},set y(val){_this.y=val}};this.init(["x","y","left","center","right"]),this.default="left",this.draggable=!1,this.isOnCanvas=!1,this.active=!1,this.x,this.y}get pos(){return this._position}get position(){return this._position}ac(inp){return inp=inp.slice(0,4)?"left":"right"==inp.slice(0,5)?"right":"middle"==inp.slice(0,6)?"center":inp.toLowerCase()}dragging(inp){return inp??=this.default,this.draggable=!0,this[inp]>=this.holdThreshold?this[inp]:0}},this.mouse=new this._Mouse,this._SpriteMouse=class extends this._Mouse{constructor(){super(),this.hover=0}hovers(){return 1==this.hover}hovering(){return this.hover>0?this.hover:0}hovered(){return-1==this.hover}};const _onmousedown=this._onmousedown,__onmousedown=function(btn){let ms;this.mouse[btn]++,this.mouse.active=!0,this.world.mouseSprites.length&&(ms=this.world.mouseSprites[0],ms.mouse[btn]=1,this.world.mouseSprite&&(this.world.mouseSprite.mouse[btn]=0,"left"==btn&&(this.world.mouseSprite.mouse.draggable=!1)),this.world.mouseSprite=ms)};this._onmousedown=function(e){let btn="left";1===e.button?btn="center":2===e.button&&(btn="right"),__onmousedown.call(this,btn),_onmousedown.call(this,e)};const _ontouchstart=this._ontouchstart;this._ontouchstart=function(e){__onmousedown.call(this,"left"),_ontouchstart.call(this,e)};const _onmouseup=this._onmouseup,__onmouseup=function(btn){this.mouse[btn]>=this.mouse.holdThreshold?this.mouse[btn]=-3:this.mouse[btn]>1?this.mouse[btn]=-1:this.mouse[btn]=-2,this.world.mouseSprite&&(this.world.mouseSprite.mouse.hover>1?this.world.mouseSprite.mouse[btn]>=this.mouse.holdThreshold?this.world.mouseSprite.mouse[btn]=-3:this.world.mouseSprite.mouse[btn]>1?this.world.mouseSprite.mouse[btn]=-1:this.world.mouseSprite.mouse[btn]=-2:(this.world.mouseSprite.mouse[btn]=0,this.world.mouseSprite.mouse.draggable=!1))};this._onmouseup=function(e){let btn="left";1===e.button?btn="center":2===e.button&&(btn="right"),__onmouseup.call(this,btn),_onmouseup.call(this,e)};const _ontouchend=this._ontouchend;if(this._ontouchend=function(e){__onmouseup.call(this,"left"),_ontouchend.call(this,e)},this._KeyBoard=class extends this.InputDevice{constructor(){super(),this.default=" "}ac(inp){if(1==inp.length)return inp.toLowerCase();if(!isNaN(inp)){if(38==inp)return"ArrowUp";if(40==inp)return"ArrowDown";if(37==inp)return"ArrowLeft";if(39==inp)return"ArrowRight";if(inp<10)return inp+"";throw new Error('Use key names with the keyboard input functions, not key codes! If you are trying to detect if the user pressed a number key make it a string. For example: "5"')}return"space"==inp||"spacebar"==inp?" ":inp[0].toUpperCase()+inp.slice(1).toLowerCase()}get space(){return this[" "]}get spacebar(){return this[" "]}},this.kb=new this._KeyBoard,delete this._KeyBoard,this.keyboard=this.kb,navigator.keyboard){const keyboard=navigator.keyboard;window==window.top?keyboard.getLayoutMap().then((keyboardLayoutMap=>{"w"!=keyboardLayoutMap.get("KeyW")&&(this.p5play.standardizeKeyboard=!0)})):this.p5play.standardizeKeyboard=!0}else this.p5play.standardizeKeyboard=!0;function _getKeyFromCode(e){let code=e.code;return 4==code.length&&"Key"==code.slice(0,3)?code[3].toLowerCase():e.key}this.keyIsDown=function(keyCode){throw new Error("The p5.js keyIsDown function is outdated and can't be used in p5play. Trust me, you'll see that the p5play kb.pressing function is much better. It uses key name strings that are easier to write and easier to read! https://p5play.org/learn/input_devices.html The p5.js keyIsDown function relies on key codes and custom constants for key codes, which are not only hard to remember but were also deprecated in the JavaScript language standards over six years ago and shouldn't be used in new projects. More info: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode")};let simpleKeyControls={w:"up",s:"down",a:"left",d:"right",ArrowUp:"up",ArrowDown:"down",ArrowLeft:"left",ArrowRight:"right",i:"up2",k:"down2",j:"left2",l:"right2"};const _onkeydown=this._onkeydown;this._onkeydown=function(e){let key=e.key;this.p5play.standardizeKeyboard&&(key=_getKeyFromCode(e));let keys=[key],k=simpleKeyControls[key];k&&keys.push(k);for(let k of keys)(!this.kb[k]||this.kb[k]<0)&&(this.kb[k]=1);_onkeydown.call(this,e)};const _onkeyup=this._onkeyup;this._onkeyup=function(e){let key=e.key;this.p5play.standardizeKeyboard&&(key=_getKeyFromCode(e));let keys=[key],k=simpleKeyControls[key];k&&keys.push(k);for(let k of keys)this.kb[k]>=this.kb.holdThreshold?this.kb[k]=-3:this.kb[k]>1?this.kb[k]=-1:this.kb[k]=-2;_onkeyup.call(this,e)},this._Contro=class extends this.InputDevice{constructor(gp){super();this.init(["a","b","x","y","l","r","lt","rt","select","start","up","down","left","right","leftTrigger","rightTrigger"]),this.leftStick={x:0,y:0,btn:0},this.rightStick={x:0,y:0,btn:0},this._btns={a:0,b:1,x:2,y:3,l:4,r:5,lt:6,rt:7,select:8,start:9,leftStickButton:10,rightStickButton:11,up:12,down:13,left:14,right:15},this._axes={leftStick:{x:0,y:1},rightStick:{x:2,y:3},leftTrigger:4,rightTrigger:5},gp.id.includes("GuliKit")&&(this._btns.a=1,this._btns.b=0,this._btns.x=3,this._btns.y=2),log(gp),this.gamepad=gp,this.id=gp.id}ac(inp){return inp.toLowerCase()}_update(){if(this.gamepad=navigator.getGamepads()[this.gamepad.index],!this.gamepad)return;let pad=this.gamepad;for(let name in this._btns){let idx=this._btns[name];pad.buttons[idx].pressed?this[name]++:this[name]=0}return this.leftStick.x=pad.axes[this._axes.leftStick.x],this.leftStick.y=pad.axes[this._axes.leftStick.y],this.rightStick.x=pad.axes[this._axes.rightStick.x],this.rightStick.y=pad.axes[this._axes.rightStick.y],void 0!==pad.axes[this._axes.leftTrigger]?(this.leftTrigger=pad.axes[this._axes.leftTrigger],this.rightTrigger=pad.axes[this._axes.rightTrigger]):(this.leftTrigger=pad.buttons[this._btns.lt].value,this.rightTrigger=pad.buttons[this._btns.rt].value),!0}},this._Contros=class extends Array{constructor(){super();let _this=this;window.addEventListener("gamepadconnected",(e=>{_this._addContro(e.gamepad)})),window.addEventListener("gamepaddisconnected",(e=>{_this._removeContro(e.gamepad)})),this.default="a";let methods=["presses","pressing","pressed","holds","holding","held","released"];for(let m of methods)this[m]=inp=>{if(this[0])return this[0][m](inp)};let inputs=["a","b","x","y","l","r","lt","rt","select","start","leftStickButton","rightStickButton","up","down","left","right"];for(let inp of inputs)Object.defineProperty(this,inp,{get:()=>_this[0]?_this[0][inp]:0});let props=["leftStick","rightStick"];for(let prop of props){this[prop]={};for(let axis of["x","y"])Object.defineProperty(this[prop],axis,{get:()=>_this[0]?_this[0][prop][axis]:0})}if(!navigator?.getGamepads)return;let gps=navigator.getGamepads();for(let gp of gps)gp&&this._addContro(gp)}_addContro(gp){gp&&(log("controller "+this.length+" connected: "+gp.id),this.push(new pInst._Contro(gp)))}_removeContro(gp){if(gp){log("controller "+this.length+" disconnected: "+gp.id);for(let i=0;i<this.length;i++)if(this[i].gamepad.index===gp.index){this.splice(i,1);break}}}_update(){for(let c of this)c._update()}},this.contro=new this._Contros,delete this._Contros,this.controllers=this.contro,this.inputs=[],this.inputs[this.netcode.player]={mouse:this.mouse,kb:this.kb,contro:this.contro},this.getFPS||(this.p5play._fps=60),this.getFPS??=()=>this.p5play._fps,this.loadAds=opt=>{opt??={},void 0!==window.webkit&&webkit.messageHandlers.loadAds.postMessage(JSON.stringify(opt))},this.showAd=type=>{type&&(type=type.toLowerCase()),type??="interstitial",void 0!==window.webkit&&confirm("p5play:"+type)}})),p5.prototype.registerMethod("pre",(function(){this.p5play._fps&&(this.p5play._preDrawFrameTime=performance.now()),1==this.frameCount&&(this.camera.x||(this.camera.x=this.world.hw),this.camera.y||(this.camera.y=this.world.hh),this.camera.init=!0,this.canvas.addEventListener("contextmenu",(event=>event.preventDefault()))),this.mouse.x=(this.mouseX-this.world.hw)/this.camera.zoom+this.camera.x,this.mouse.y=(this.mouseY-this.world.hh)/this.camera.zoom+this.camera.y,this.camera.mouse.x=this.mouseX,this.camera.mouse.y=this.mouseY,this.contro._update()})),p5.prototype.registerMethod("post",(function(){this.p5play._inPostDraw=!0,this.allSprites.autoCull&&this.allSprites.cull(1e4),this.allSprites._autoDraw&&(this.camera.on(),this.allSprites.draw(),this.camera.off()),this.allSprites._autoDraw??=!0,this.world.autoStep&&this.world.step(),this.world.autoStep??=!0,this.allSprites._autoUpdate&&this.allSprites.update(),this.allSprites._autoUpdate??=!0;for(let s of this.allSprites)s.autoDraw??=!0,s.autoUpdate??=!0;for(let btn of["left","center","right"])this.mouse[btn]<0?this.mouse[btn]=0:this.mouse[btn]>0&&this.mouse[btn]++,this.world.mouseSprite&&this.world.mouseSprite.mouse[btn]<0&&(this.world.mouseSprite.mouse[btn]=0);for(let k in this.kb)"holdThreshold"!=k&&(this.kb[k]<0?this.kb[k]=0:this.kb[k]>0&&this.kb[k]++);if(this.world.mouseTracking){if(this.world.mouseSprite){let val=0;for(let btn of["left","center","right"])val+=this.world.mouseSprite.mouse[btn];0==val&&(this.world.mouseSprite=null)}let sprites=this.world.getSpritesAt(this.mouse.x,this.mouse.y);sprites.sort(((a,b)=>-1*(a._layer-b._layer)));let ms,uiSprites=this.world.getSpritesAt(this.camera.mouse.x,this.camera.mouse.y,this.allSprites,!1);if(uiSprites.sort(((a,b)=>-1*(a._layer-b._layer))),sprites=sprites.concat(uiSprites),this.mouse.pressing("left")||this.mouse.pressing("center")||this.mouse.pressing("right")){if(this.world.mouseSprite?.mouse.draggable)ms=this.world.mouseSprite;else for(let s of sprites)if(s==this.world.mouseSprite){ms=s;break}ms?(ms.mouse.left=this.mouse.left,ms.mouse.center=this.mouse.center,ms.mouse.right=this.mouse.right,ms.mouse.x=ms.x-this.mouse.x,ms.mouse.y=ms.y-this.mouse.y):this.world.mouseSprite&&(this.world.mouseSprite.mouse.left=0,this.world.mouseSprite.mouse.center=0,this.world.mouseSprite.mouse.right=0,this.world.mouseSprite.mouse.draggable=!1)}for(let s of sprites)s.mouse.hover++;for(let s of this.world.mouseSprites)this.world.mouseSprite?.mouse.draggable&&s==ms||sprites.includes(s)||(s.mouse.hover=-1,s.mouse.left=0,s.mouse.center=0,s.mouse.right=0,s.mouse.draggable=!1);this.world.mouseSprites=sprites}this.camera.off(),this.p5play._fps&&(this.p5play._postDrawFrameTime=performance.now(),this.p5play._fps=Math.round(1e3/(this.p5play._postDrawFrameTime-this.p5play._preDrawFrameTime))||1),this.p5play._inPostDraw=!1}));